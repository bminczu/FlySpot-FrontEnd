[{"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js":"1"},{"size":2395,"mtime":1638558983801,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1q4n5vx","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js",["7","8"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form} from 'react-bootstrap'\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {           \n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n        \n        <div className=\"signin-container\">\n            <div className=\"welcome-container\">\n              \n\n                <h1 className=\"welcome-banner\"> Welcome to FlySpot</h1>\n               \n                <h2 className=\"please-login\"> Please Log In</h2>\n            </div>\n           \n            \n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <form className=\"login-form\" onSubmit={this.handleSubmit}>\n                <div>\n                    <input  name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                    <input  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                </div>\n                 <button className=\"login-btn\" type=\"submit\" className=\"btn btn-secondary btn-lg\">Log In</button>\n                 <button type=\"submit\" onClick={this.redirectToSignUp} className=\"btn btn-secondary btn-lg\">Sign up</button>\n            </form>\n        </div>\n        \n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)",{"ruleId":"9","severity":1,"message":"10","line":4,"column":9,"nodeType":"11","messageId":"12","endLine":4,"endColumn":13},{"ruleId":"13","severity":1,"message":"14","line":75,"column":62,"nodeType":"15","endLine":75,"endColumn":98},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]