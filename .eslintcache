[{"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/Feed.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/createPost.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPostReviews.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js":"22","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js":"23","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js":"24","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewCard.js":"25","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPostReview.js":"26","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectReview.js":"27","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectMyPost.js":"28","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPost.js":"29"},{"size":3320,"mtime":1613521209399,"results":"30","hashOfConfig":"31"},{"size":5834,"mtime":1613526114508,"results":"32","hashOfConfig":"31"},{"size":2331,"mtime":1613527948190,"results":"33","hashOfConfig":"31"},{"size":671,"mtime":1613530242718,"results":"34","hashOfConfig":"31"},{"size":2044,"mtime":1613493107212,"results":"35","hashOfConfig":"31"},{"size":794,"mtime":1613511652446,"results":"36","hashOfConfig":"31"},{"size":895,"mtime":1613527861050,"results":"37","hashOfConfig":"31"},{"size":216,"mtime":1612720215687,"results":"38","hashOfConfig":"31"},{"size":217,"mtime":1613493107230,"results":"39","hashOfConfig":"31"},{"size":2309,"mtime":1613493107210,"results":"40","hashOfConfig":"31"},{"size":1131,"mtime":1613493107202,"results":"41","hashOfConfig":"31"},{"size":219,"mtime":1612920290001,"results":"42","hashOfConfig":"31"},{"size":320,"mtime":1613499278443,"results":"43","hashOfConfig":"31"},{"size":2069,"mtime":1613525254002,"results":"44","hashOfConfig":"31"},{"size":231,"mtime":1612922217875,"results":"45","hashOfConfig":"31"},{"size":1908,"mtime":1613493107201,"results":"46","hashOfConfig":"31"},{"size":218,"mtime":1612895274926,"results":"47","hashOfConfig":"31"},{"size":713,"mtime":1613493107228,"results":"48","hashOfConfig":"31"},{"size":845,"mtime":1613493107229,"results":"49","hashOfConfig":"31"},{"size":2817,"mtime":1613530067814,"results":"50","hashOfConfig":"31"},{"size":379,"mtime":1612895897975,"results":"51","hashOfConfig":"31"},{"size":2294,"mtime":1613529950880,"results":"52","hashOfConfig":"31"},{"size":6361,"mtime":1613524252985,"results":"53","hashOfConfig":"31"},{"size":1776,"mtime":1613528187897,"results":"54","hashOfConfig":"31"},{"size":2079,"mtime":1613529821670,"results":"55","hashOfConfig":"31"},{"size":508,"mtime":1613493107198,"results":"56","hashOfConfig":"31"},{"size":117,"mtime":1613493107199,"results":"57","hashOfConfig":"31"},{"size":111,"mtime":1612923602349,"results":"58","hashOfConfig":"31"},{"size":137,"mtime":1612921987405,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tdv2vp",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js",["132","133"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\n\nclass NewPostForm extends React.Component{\n\n    state = {\n        image_url: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: '',\n        longitude: '',\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: ''\n       \n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n\n\n    handleSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n           console.log(newPostObj)\n            this.props.createPost(newPostObj)\n            this.props.history.push(\"/your-posts\")\n            \n        })\n    }\n\n   \n    render(){\n        return(\n            \n\n\n         <Container >\n            <br></br>\n            <br></br>\n        <Row>\n            <Col>      \n                <div>\n                 <MapContainer/>\n                 </div>\n            </Col>\n            <br></br>\n            <Col>\n            <div>\n        <form onSubmit={this.handleSubmit}>\n         <label for=\"inputAddress\">Title Your Post</label>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title Your Post\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                    <select onChange={this.handleInputChange} value={this.state.authors_rating} name= {\"authors_rating\"} placeholder=\"Author's Rating\" class=\"form-control\">\n                        <option selected>Author's Rating</option>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                    </select><br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n                \n\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n          \n            <button type=\"submit\" class=\"btn btn-secondary\">Submit</button>\n            </form>\n        </div>   \n            </Col>\n        </Row>\n    </Container>\n\n\n\n         )\n    }\n }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n        \n    }\n}\n\nconst mapDispatchToProps = { \n    createPost: createPost\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)\n\n",["134","135"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js",["136"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js",[],["137","138"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js",["139"],"const posts = (state=[], action) => {\n\n    let updatedPosts;\n\n    switch(action.type){\n        case \"SIGN_IN_USER\":\n        case \"CURRENT_USER\":\n            return action.user.posts\n        case \"CREATE_POST\":\n        return [...state, action.post]\n        case \"DELETE_POST\":\n            updatedPosts = state.filter(post => post.id !== action.id)\n                    return updatedPosts\n        case \"UPDATE_MY_POST\":\n            updatedPosts = state.map(postObj => {\n                if (postObj.id == action.post.id) {\n                    return action.post\n                } else {\n                    return postObj\n                }\n            })\n            return updatedPosts\n    default:\n        return state\n }\n}\n\nexport default posts\n\n// THIS REDUCER IS RESPONIBLE FOR MY POSTS ONLY","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js",[],["140","141"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js",["142"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form} from 'react-bootstrap'\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"bart\",\n        password: \"123\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {                         ////then back end sends  back user obj after verifying in backend\n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n            \n        <div className=\"background\">\n            <div className=\"whitefont\">\n                <h1> Welcome</h1>\n                <h2> Please Log In</h2>\n            </div>\n           \n            <br></br>\n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <input  name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                    <input  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                </div>\n                 <button type=\"submit\" class=\"btn btn-secondary\">Log In</button>\n                 <button type=\"submit\" onClick={this.redirectToSignUp} class=\"btn btn-secondary\">Sign up</button>\n            </form>\n        </div>\n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)",["143","144"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/Feed.js",[],["145","146"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/createPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js",["147"],"import React from 'react' \nimport {Card, Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport {selectMyPost} from '../actions/selectMyPost'\nimport {withRouter} from 'react-router-dom'\nimport {deletePost} from '../actions/createPost'\n\nclass PostCard extends React.Component{\n\n    redirectToEdit = (e) => {\n        this.props.selectMyPost(this.props.post)\n        this.props.history.push(`/edit-your-post/${e.target.id}`)\n        \n    }\n\n    handleDeletePost = (e) => {\n        const id = parseInt(e.target.id)\n       \n        fetch(`http://localhost:3000/posts/${id}`, {\n            method: \"DELETE\"\n          \n        })\n        .then(resp => resp.json())\n        .then(() => {\n            this.props.deletePost(id)\n         console.log(id)\n        \n        })\n    }\n\n\n    render(){\n        \n        const {image_url, title, id, address, latitude, longitude, category, description, airspace } = this.props.post\n        return(\n\n\n            <div className=\"feed-card\" class=\"container\">\n        <Card>\n            <Card.Img variant=\"top\"/>\n            <Card.Body className=\"feed-card\">\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                <img src={image_url} width=\"400px\" height=\"300px\"></img>\n                <h1> {title}</h1>\n                <h2>{category}</h2>\n                <p>{description}</p>\n                <p>Airspace Class: {airspace}</p>\n                <p>Address: {address}</p>\n                <p>Latitude:  {latitude}</p>\n                <p> Longitude: {longitude}</p>\n                </Card.Text>\n                <Button onClick={this.redirectToEdit} id={id} variant=\"btn btn-secondary\">Edit</Button> \n                <Button variant=\"btn btn-secondary\" id={id}  onClick={this.handleDeletePost}> delete </Button>\n            </Card.Body>\n            </Card>\n            \n            \n\n            </div>\n\n\n\n\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n\n    selectMyPost: selectMyPost,\n    deletePost: deletePost\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(PostCard))",["148","149"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPostReviews.js",["150"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js",[],["151","152"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js",["153","154","155"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js",["156","157"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {updateMyPost} from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\n\n\nclass EditPostForm extends React.Component {\n            state = {\n                title: this.props.selectMyPost.title,\n                user_id: this.props.selectMyPost.user_id,\n                address: this.props.selectMyPost.address,\n                latitude: this.props.selectMyPost.latitude,\n                longitude: this.props.selectMyPost.longitude,\n                category: this.props.selectMyPost.category,\n                airspace: this.props.selectMyPost.airspace,\n                description: this.props.selectMyPost.description,\n                authors_rating: this.props.selectMyPost.authors_rating,\n                video: this.props.selectMyPost.video\n        \n            }\n        handleInputChange = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n        handleSubmit = (e) => {\n         \n            e.preventDefault()\n        \n            const id = e.target.id\n            console.log(e.target)\n            \n            fetch(`http://localhost:3000/posts/${id}`, {\n                method: \"PATCH\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: this.state.title,\n                    user_id: this.state.user_id,\n                    address: this.state.address,\n                    latitude: this.state.latitude,\n                    longitude: this.state.longitude,\n                    category: this.state.category,\n                    airspace: this.state.airspace,\n                    description: this.state.description,\n                    authors_rating: this.state.authors_rating,\n                    video: this.state.video\n                })\n            })\n            .then(response => response.json())\n            .then(updatedPost => {\n             \n                this.props.updateMyPost(updatedPost)\n                this.props.history.push('/your-posts')\n            })\n        }\n        render(){\n\n            \n            return(\n                <Container >\n                <br></br>\n                <br></br>\n            <Row>\n                <Col>      \n                    <div>\n                     <MapContainer/>\n                     </div>\n                </Col>\n                <br></br>\n                <Col>\n                <div>\n            <form onSubmit={this.handleSubmit}>\n             <label for=\"inputAddress\">Title Your Post</label>\n                <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title Your Post\"/><br></br> <br></br>\n                    <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                    <br></br>\n                        <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                    <br></br>\n                        <select onChange={this.handleInputChange} value={this.state.authors_rating} name= {\"authors_rating\"} placeholder=\"Author's Rating\" class=\"form-control\">\n                            <option selected>Author's Rating</option>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </select>\n                            </div><div class=\"form-group col-md-6\">\n                             <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                            <option selected>Area Category</option>\n                            <option>Urban</option>\n                            <option>Nature</option>\n                            <option>Industrial</option>\n                            <option>Park</option>\n                            <option>Other</option>\n                         </select>\n    \n                    <br></br>\n                        <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                    <br></br>\n                    <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                        <option selected>Select Airspace Classification</option>\n                        <option>Class A</option>\n                        <option>Class B</option>\n                        <option>Class C</option>\n                        <option>Class D</option>\n                        <option>Class G</option>\n                    </select>\n                    <br></br>\n                    <div class=\"form-group col-md-4\">\n                    </div>\n                    </div>\n                    \n    \n    \n               \n                    <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                    <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                    <br></br>\n                </div>\n              \n                <button type=\"submit\" class=\"btn btn-secondary\">Submit</button>\n                </form>\n            </div>   \n                </Col>\n            </Row>\n        </Container>\n    \n            )\n        }\n    }\n    const mapStateToProps = (state) => {\n        return {\n            post: state.post,\n            currentUser: state.currentUser,\n            selectMyPost: state.selectMyPost\n        }\n    }\n    const mapDispatchToProps = {\n        updateMyPost: updateMyPost\n    } \n    export default connect(mapStateToProps, mapDispatchToProps)(EditPostForm)\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js",["158","159","160","161","162","163","164","165"],"import React from 'react'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport {withRouter} from 'react-router-dom'\nimport { selectPublicPost } from '../actions/selectPublicPost'\nimport {connect} from 'react-redux'\nimport {selectPublicPostReviews} from '../actions/selectPublicPostReview'\n\nclass FeedCard extends React.Component{\n\n\n    handleShowPost = (e) => {\n        const id = e.target.id\n        this.props.selectPublicPost(this.props.post)\n        this.props.selectPublicPostReviews(this.props.post.reviews)\n        this.props.history.push(`/show-post/${id}`)\n    }\n\n\n\n    render(){\n        \n        const {image_url, title, id, address, latitude, longitude, category, description, airspace } = this.props.post\n        return(\n\n\n\n\n\n\n\n             <div className=\"feed-card\" class=\"container\">\n                \n                 <div  class=\"col-md\">\n                    <Card >\n                        <Card.Body className=\"feed-card\" >\n                        <Card.Title>{title}</Card.Title>\n                        <Card.Text>\n                            <h1> {title}</h1>\n                            <img src={image_url} width=\"400px\" height=\"300px\"></img>\n                            <h2>{category}</h2>\n                            <p>{description}</p>\n                        </Card.Text>\n                        <Button  className=\"btn btn-secondary\" onClick={this.handleShowPost} id={id} >View</Button>\n                    </Card.Body>\n                    </Card>\n                   \n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    selectPublicPost: selectPublicPost,\n    selectPublicPostReviews: selectPublicPostReviews\n}\n\n\nexport default connect(null, mapDispatchToProps)(withRouter(FeedCard))","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewCard.js",["166"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPostReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPost.js",[],{"ruleId":"167","severity":1,"message":"168","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":5,"column":38,"nodeType":"169","messageId":"170","endLine":5,"endColumn":42},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"167","severity":1,"message":"176","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":22},{"ruleId":"172","replacedBy":"177"},{"ruleId":"174","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":16,"column":32,"nodeType":"181","messageId":"182","endLine":16,"endColumn":34},{"ruleId":"172","replacedBy":"183"},{"ruleId":"174","replacedBy":"184"},{"ruleId":"167","severity":1,"message":"185","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"172","replacedBy":"186"},{"ruleId":"174","replacedBy":"187"},{"ruleId":"172","replacedBy":"188"},{"ruleId":"174","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":44,"column":17,"nodeType":"192","endLine":44,"endColumn":67},{"ruleId":"172","replacedBy":"193"},{"ruleId":"174","replacedBy":"194"},{"ruleId":"179","severity":1,"message":"180","line":14,"column":38,"nodeType":"181","messageId":"182","endLine":14,"endColumn":40},{"ruleId":"172","replacedBy":"195"},{"ruleId":"174","replacedBy":"196"},{"ruleId":"167","severity":1,"message":"197","line":4,"column":23,"nodeType":"169","messageId":"170","endLine":4,"endColumn":46},{"ruleId":"167","severity":1,"message":"198","line":26,"column":117,"nodeType":"169","messageId":"170","endLine":26,"endColumn":122},{"ruleId":"190","severity":1,"message":"191","line":41,"column":21,"nodeType":"192","endLine":41,"endColumn":71},{"ruleId":"167","severity":1,"message":"168","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":5,"column":38,"nodeType":"169","messageId":"170","endLine":5,"endColumn":42},{"ruleId":"167","severity":1,"message":"199","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":26},{"ruleId":"167","severity":1,"message":"200","line":2,"column":28,"nodeType":"169","messageId":"170","endLine":2,"endColumn":31},{"ruleId":"167","severity":1,"message":"201","line":2,"column":33,"nodeType":"169","messageId":"170","endLine":2,"endColumn":36},{"ruleId":"167","severity":1,"message":"202","line":22,"column":38,"nodeType":"169","messageId":"170","endLine":22,"endColumn":45},{"ruleId":"167","severity":1,"message":"203","line":22,"column":47,"nodeType":"169","messageId":"170","endLine":22,"endColumn":55},{"ruleId":"167","severity":1,"message":"204","line":22,"column":57,"nodeType":"169","messageId":"170","endLine":22,"endColumn":66},{"ruleId":"167","severity":1,"message":"205","line":22,"column":91,"nodeType":"169","messageId":"170","endLine":22,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":39,"column":29,"nodeType":"192","endLine":39,"endColumn":79},{"ruleId":"167","severity":1,"message":"206","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":21},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'BrowserRouter' is defined but never used.",["207"],["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["207"],["208"],"'Form' is defined but never used.",["207"],["208"],["207"],["208"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["207"],["208"],["207"],["208"],"'selectPublicPostReviews' is defined but never used.","'video' is assigned a value but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'address' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'airspace' is assigned a value but never used.","'currentUser' is defined but never used.","no-global-assign","no-unsafe-negation"]