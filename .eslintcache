[{"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/App.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewPublicPost.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditReviewForm.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reportWebVitals.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/createPost.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/showPublicPost.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/MapContainer.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js":"22","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js":"23","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/FeedCard.js":"24"},{"size":714,"mtime":1615494873570,"results":"25","hashOfConfig":"26"},{"size":216,"mtime":1612720215687,"results":"27","hashOfConfig":"26"},{"size":2320,"mtime":1638823106895,"results":"28","hashOfConfig":"26"},{"size":8175,"mtime":1616083536367,"results":"29","hashOfConfig":"26"},{"size":776,"mtime":1616087605466,"results":"30","hashOfConfig":"26"},{"size":2271,"mtime":1634071068672,"results":"31","hashOfConfig":"26"},{"size":1293,"mtime":1638811115924,"results":"32","hashOfConfig":"26"},{"size":3046,"mtime":1616083406498,"results":"33","hashOfConfig":"26"},{"size":2880,"mtime":1615321901945,"results":"34","hashOfConfig":"26"},{"size":379,"mtime":1618948485894,"results":"35","hashOfConfig":"26"},{"size":362,"mtime":1612295974335,"results":"36","hashOfConfig":"26"},{"size":231,"mtime":1612922217875,"results":"37","hashOfConfig":"26"},{"size":6561,"mtime":1638477543000,"results":"38","hashOfConfig":"26"},{"size":320,"mtime":1613509405071,"results":"39","hashOfConfig":"26"},{"size":677,"mtime":1613670124788,"results":"40","hashOfConfig":"26"},{"size":2933,"mtime":1616083474280,"results":"41","hashOfConfig":"26"},{"size":219,"mtime":1612920290001,"results":"42","hashOfConfig":"26"},{"size":892,"mtime":1638813143279,"results":"43","hashOfConfig":"26"},{"size":845,"mtime":1613493107229,"results":"44","hashOfConfig":"26"},{"size":217,"mtime":1613493107230,"results":"45","hashOfConfig":"26"},{"size":2996,"mtime":1634073742662,"results":"46","hashOfConfig":"26"},{"size":1704,"mtime":1638891618129,"results":"47","hashOfConfig":"26"},{"size":2546,"mtime":1638891127358,"results":"48","hashOfConfig":"26"},{"size":2065,"mtime":1616084678212,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1q4n5vx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js",[],["113","114"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js",[],["115","116"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js",["117"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateMyPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport { Container, Col, Row} from 'react-bootstrap'\n\n\nclass EditPostForm extends React.Component {\n    state = {\n        image_url: this.props.selectMyPost.image_url,\n        title: this.props.selectMyPost.title,\n        user_id: this.props.selectMyPost.user_id,\n        address: this.props.selectMyPost.address,\n        latitude: this.props.selectMyPost.latitude,\n        longitude: this.props.selectMyPost.longitude,\n        category: this.props.selectMyPost.category,\n        airspace: this.props.selectMyPost.airspace,\n        description: this.props.selectMyPost.description,\n        authors_rating: this.props.selectMyPost.authors_rating,\n        video: this.props.selectMyPost.video\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleStarInput = (e) => {\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\") {\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({ authors_rating: rating })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`http://localhost:3000/posts/${this.props.selectMyPost.id}`, {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.state.user_id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n            .then(response => response.json())\n            .then(updatedPost => {\n                this.props.updateMyPost(updatedPost)\n                this.props.history.push('/yourposts')\n            })\n    }\n    renderCoords = (latLng) => {\n        this.setState({\n            latitude: latLng.lat,\n            longitude: latLng.lng\n        })\n    }\n    renderAddress = (address) => {\n        this.setState({\n            address: address\n        })\n    }\n    render() {\n        return (\n                <Container >\n                    <br></br>\n                    <br></br>\n                    <Row>\n                        <Col>\n                            <div>\n                            <MapContainer renderCoords={this.renderCoords} renderAddress={this.renderAddress}/>\n                            </div>\n                        </Col>\n                        <br></br>\n                        <Col>\n                            <div className=\"new-post-form\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <h5>Your New Fly Spot</h5>\n                                    <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title} name={\"title\"} placeholder=\"Title\" /><br></br> <br></br>\n                                    <div class=\"form-row\">\n                                        <div class=\"form-group col-md-6\">\n                                            <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name={\"address\"} placeholder=\"Address\" />\n                                            <br></br>\n                                            <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name={\"latitude\"} placeholder=\"Latitude\" />\n                                            <br></br>\n                                            <select onChange={this.handleStarInput} value={this.state.authors_rating} name={\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                                                <option selected>Rate This Spot</option>\n                                                <option>⭐</option>\n                                                <option>⭐⭐</option>\n                                                <option>⭐⭐⭐</option>\n                                                <option>⭐⭐⭐⭐</option>\n                                                <option>⭐⭐⭐⭐⭐</option>\n                                            </select>\n                                            <br></br>\n                                            <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name={\"image_url\"} placeholder=\"Photo URL\" />\n                                            <br></br>\n                                        </div>\n                                        <div class=\"form-group col-md-6\">\n                                                <select onChange={this.handleInputChange} value={this.state.category} name={\"category\"} placeholder=\"Category\" class=\"form-control\">\n                                                    <option selected>Area Category</option>\n                                                    <option>Urban</option>\n                                                    <option>Nature</option>\n                                                    <option>Industrial</option>\n                                                    <option>Park</option>\n                                                    <option>Other</option>\n                                                </select>\n                                                <br></br>\n                                                <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name={\"longitude\"} placeholder=\"Longitude\" />\n                                            <br></br>\n                                                <select onChange={this.handleInputChange} value={this.state.airspace} name={\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                                                    <option selected>Select Airspace Classification</option>\n                                                    <option>Class A</option>\n                                                    <option>Class B</option>\n                                                    <option>Class C</option>\n                                                    <option>Class D</option>\n                                                    <option>Class G</option>\n                                                </select>\n                                                <br></br>\n                                                <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name={\"video\"} placeholder=\"Youtube Video Link\" />\n                                        </div>\n                                        <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name={\"description\"} placeholder=\"Description\" rows=\"3\"></textarea>\n                                    </div>\n                                    <button type=\"submit\" class=\"btn btn-secondary\">Update</button>\n                                </form>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\nconst mapStateToProps = (state) => {\n    return {\n        post: state.post,\n        currentUser: state.currentUser,\n        selectMyPost: state.selectMyPost\n    }\n}\nconst mapDispatchToProps = {\n    updateMyPost: updateMyPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostForm)",["118","119"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js",["120"],"const posts = (state=[], action) => {\n\n    let updatedPosts;\n\n    switch(action.type){\n        case \"SIGN_IN_USER\":\n        case \"SIGN_UP_USER\":\n        case \"CURRENT_USER\":\n            return action.user.posts\n        case \"CREATE_POST\":\n        return [...state, action.post]\n        case \"DELETE_POST\":\n            updatedPosts = state.filter(post => post.id !== action.id)\n                    return updatedPosts\n        case \"UPDATE_MY_POST\":\n            updatedPosts = state.map(postObj => {\n                if (postObj.id == action.post.id) {\n                    return action.post\n                } else {\n                    return postObj\n                }\n            })\n            return updatedPosts\n    default:\n        return state\n }\n}\n\nexport default posts\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/App.js",[],["121","122"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js",[],["123","124"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reportWebVitals.js",[],["125","126"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js",["127","128","129"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Container, Col, Row} from 'react-bootstrap'\nclass NewPostForm extends React.Component{\n    state = {\n        image_url: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: ''\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleStarInput=(e)=>{\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\"){\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({authors_rating: rating})\n    }\n    handleSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n           console.log(newPostObj.id)\n            this.props.createPost(newPostObj)\n            this.props.history.push(\"/yourposts\")\n        })\n    }\nrenderCoords = (latLng) => {\n    this.setState({\n        latitude: latLng.lat,\n        longitude: latLng.lng\n    })\n}\nrenderAddress = (address) => {\n    this.setState({\n        address: address\n    })\n}\n    render(){\n        return(\n         <div>\n            <br></br>\n            <br></br>\n       \n                 \n                <div>\n                 <MapContainer renderCoords={this.renderCoords} renderAddress={this.renderAddress}/>\n                 </div>\n           \n            <br></br>\n            \n            <div className=\"new-post-form\">\n        <form onSubmit={this.handleSubmit}>\n         <h5>Your New Fly Spot</h5>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n            <button type=\"submit\" class=\"btn btn-secondary\">Post It</button>\n            </form>\n        </div>   \n        </div>\n       \n         )\n    }\n }\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser,\n        getMapCoordinates: state.getMapCoordinates,\n        getMapAddress: state.getMapAddress\n    }\n}\nconst mapDispatchToProps = { \n    createPost: createPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/createPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js",[],["130","131"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/showPublicPost.js",["132","133","134","135"],"import React from 'react' \nimport {connect} from 'react-redux'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport {deleteReview, selectPublicPostReviews} from '../actions/selectPublicPostReview'\nimport {selectReview}from '../actions/selectReview'\nimport ReviewCard from './ReviewCard'\n\n\n\nclass showPublicPost extends React.Component{\n    \n    renderReviews = () => {\n        return this.props.selectPublicPostReviews.map(reviewObj => {\n            return <ReviewCard key={reviewObj.id} review={reviewObj} />\n        })\n        \n    }\n\n    renderStars = () => {\n        if (this.props.selectPublicPost.authors_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.selectPublicPost.authors_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n    render(){\n\n        const {image_url, id, title, address, latitude, longitude, category, airspace, description, authors_rating, video} = this.props.selectPublicPost\n      \n  \n     \n        \n        return(\n\n            \n        <Container>\n                <br></br>\n                <br></br>\n            <Row>\n                <Col>      \n                    <div>\n                    <h1>{title}</h1>\n                    <br></br>\n                    <img width=\"400px\" height=\"300px\" src={image_url}></img>\n                    <p>Author's Rating {this.renderStars()}</p>\n                    <h5>Location Category:</h5>\n                    <p>{category}</p>\n                    <h5> Address: </h5>\n                    <p>{address}</p>\n                    <h5>Coordinates: </h5>\n                    <p>{latitude} {longitude}</p>\n                    <h5>Airspace Classification:</h5><p>{airspace}</p>\n                    <p> {description}</p>\n                    <br></br>\n                    </div>\n                </Col>\n                <Col>\n                <h1>Comments</h1>\n                <Card body>{this.renderReviews()} </Card>\n                <Button className=\"btn btn-secondary\" onClick={()=> this.props.history.push(`/reviewpost/${id}`)} id={id}>Leave Feedback </Button> \n                \n                </Col>\n            </Row>\n        </Container>\n        \n       \n\n        )\n    }\n\n}\n\n    const mapStateToProps = (state) => {\n        return {\n            selectPublicPost: state.selectPublicPost,\n            selectPublicPostReviews: state.selectPublicPostReviews,\n            currentUser: state.currentUser\n           \n        }\n    }\n\n    const mapDispatchToProps = {\n        deleteReview: deleteReview,\n        selectReview: selectReview\n    }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(showPublicPost)","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js",["136"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/MapContainer.js",[],["137","138"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js",["139","140","141"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport { logOutUser } from '../actions/logOutUser';\nimport Logo from '../images/Logo.jpeg'\n\n\nclass NavBar extends React.Component{ \n\n    handleLogOut = () => {\n      this.props.logOutUser()\n      this.props.history.push(\"/signin\")\n      \n    }\n    handleCreatePost = () => {\n      this.props.history.push('/home/newpost')\n    }\n    \n    handleShowYourPosts = () => {\n      this.props.history.push('/yourposts')\n    }\n\n    handleDirectToFeed = () => {\n      this.props.history.push('/feed')\n    }\n    render(){\n    \n    \n      return (\n       \n\n         \n\n        <>\n          {this.props.currentUser ? \n            <div>\n              <img className=\"logo\" src={Logo}/> \n              <button className=\"nav-button\"  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCreatePost} >Create Post</button>\n              <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDirectToFeed} >Feed</button>\n              <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleShowYourPosts} >View Your Posts</button>\n              <button className=\"nav-button\" type=\"button\" className=\"btn btn-light\" onClick={this.handleLogOut}>Sign Out </button>\n            </div>\n            :\n            null\n          } \n          </>\n          \n        \n     \n  \n       );\n      };\n    }\n    \n    const mapDispatchToProps = {\n      logOutUser: logOutUser\n    }\n    \n    const mapStateToProps = (state) => {\n      return{\n      currentUser: state.currentUser\n      }\n    }\n    \n    export default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js",["142"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form, Button} from 'react-bootstrap'\n\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {           \n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n        \n        <div className=\"signin-container\">\n\n            <div className=\"welcome-container\">\n              \n                <h1 className=\"welcome-banner\"> Welcome to FlySpot! </h1>\n                <h5 className=\"welcome-message\">Share your favorite flying spots with the community!</h5>\n               \n            </div>\n           \n            \n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n\n                <h2 className=\"please-login\"> Please Log In</h2>\n                \n                <Form.Control name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                <Form.Control  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                <Button type=\"submit\" className=\"btn-secondary btn-lg\" style={{width: 5.5 + \"em\"}}>Log In</Button>\n                <Button style={{marginRight: \"220px\"}} type=\"submit\" onClick={this.redirectToSignUp} className=\" btn-secondary btn-lg\" style={{width: 5.5 + \"em\"}}>Sign up</Button>\n            </Form>\n        </div>\n        \n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/FeedCard.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":44,"column":15,"nodeType":"151","messageId":"152","endLine":44,"endColumn":17},{"ruleId":"143","replacedBy":"153"},{"ruleId":"145","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":17,"column":32,"nodeType":"157","messageId":"158","endLine":17,"endColumn":34},{"ruleId":"143","replacedBy":"159"},{"ruleId":"145","replacedBy":"160"},{"ruleId":"143","replacedBy":"161"},{"ruleId":"145","replacedBy":"162"},{"ruleId":"143","replacedBy":"163"},{"ruleId":"145","replacedBy":"164"},{"ruleId":"149","severity":1,"message":"165","line":5,"column":9,"nodeType":"151","messageId":"152","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"166","line":5,"column":20,"nodeType":"151","messageId":"152","endLine":5,"endColumn":23},{"ruleId":"149","severity":1,"message":"167","line":5,"column":25,"nodeType":"151","messageId":"152","endLine":5,"endColumn":28},{"ruleId":"143","replacedBy":"168"},{"ruleId":"145","replacedBy":"169"},{"ruleId":"149","severity":1,"message":"170","line":4,"column":23,"nodeType":"151","messageId":"152","endLine":4,"endColumn":46},{"ruleId":"149","severity":1,"message":"171","line":33,"column":101,"nodeType":"151","messageId":"152","endLine":33,"endColumn":115},{"ruleId":"149","severity":1,"message":"172","line":33,"column":117,"nodeType":"151","messageId":"152","endLine":33,"endColumn":122},{"ruleId":"173","severity":1,"message":"174","line":49,"column":21,"nodeType":"175","endLine":49,"endColumn":71},{"ruleId":"155","severity":1,"message":"156","line":14,"column":38,"nodeType":"157","messageId":"158","endLine":14,"endColumn":40},{"ruleId":"143","replacedBy":"176"},{"ruleId":"145","replacedBy":"177"},{"ruleId":"173","severity":1,"message":"174","line":37,"column":15,"nodeType":"175","endLine":37,"endColumn":49},{"ruleId":"178","severity":1,"message":"179","line":38,"column":61,"nodeType":"180","endLine":38,"endColumn":90},{"ruleId":"178","severity":1,"message":"179","line":41,"column":60,"nodeType":"180","endLine":41,"endColumn":85},{"ruleId":"178","severity":1,"message":"179","line":78,"column":136,"nodeType":"180","endLine":78,"endColumn":163},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar",["181"],["182"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["181"],["182"],["181"],["182"],["181"],["182"],"'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.",["181"],["182"],"'selectPublicPostReviews' is defined but never used.","'authors_rating' is assigned a value but never used.","'video' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["181"],["182"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]