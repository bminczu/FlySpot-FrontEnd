[{"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/createPost.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/selectPublicPost.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/showPublicPost.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/App.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reportWebVitals.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewPublicPost.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditReviewForm.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/MapContainer.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/signinUser.js":"22","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js":"23","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewCard.js":"24","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js":"25","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js":"26"},{"size":895,"mtime":1613527861050,"results":"27","hashOfConfig":"28"},{"size":216,"mtime":1612720215687,"results":"29","hashOfConfig":"28"},{"size":231,"mtime":1612922217875,"results":"30","hashOfConfig":"28"},{"size":845,"mtime":1613493107229,"results":"31","hashOfConfig":"28"},{"size":320,"mtime":1613509405071,"results":"32","hashOfConfig":"28"},{"size":137,"mtime":1612921987405,"results":"33","hashOfConfig":"28"},{"size":714,"mtime":1615494873570,"results":"34","hashOfConfig":"28"},{"size":217,"mtime":1613493107230,"results":"35","hashOfConfig":"28"},{"size":1729,"mtime":1616004954938,"results":"36","hashOfConfig":"28"},{"size":2933,"mtime":1616083474280,"results":"37","hashOfConfig":"28"},{"size":776,"mtime":1616087605466,"results":"38","hashOfConfig":"28"},{"size":2271,"mtime":1634071068672,"results":"39","hashOfConfig":"28"},{"size":8175,"mtime":1616083536367,"results":"40","hashOfConfig":"28"},{"size":379,"mtime":1618948485894,"results":"41","hashOfConfig":"28"},{"size":362,"mtime":1612295974335,"results":"42","hashOfConfig":"28"},{"size":3046,"mtime":1616083406498,"results":"43","hashOfConfig":"28"},{"size":2880,"mtime":1615321901945,"results":"44","hashOfConfig":"28"},{"size":219,"mtime":1612920290001,"results":"45","hashOfConfig":"28"},{"size":1836,"mtime":1634074179746,"results":"46","hashOfConfig":"28"},{"size":2996,"mtime":1634073742662,"results":"47","hashOfConfig":"28"},{"size":677,"mtime":1613670124788,"results":"48","hashOfConfig":"28"},{"size":218,"mtime":1612895274926,"results":"49","hashOfConfig":"28"},{"size":2090,"mtime":1613680102453,"results":"50","hashOfConfig":"28"},{"size":2397,"mtime":1616084777199,"results":"51","hashOfConfig":"28"},{"size":6481,"mtime":1634074053520,"results":"52","hashOfConfig":"28"},{"size":2330,"mtime":1635280123133,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"4e139g",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js",[],["119","120"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js",["121"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/createPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js",[],["122","123"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js",[],["124","125"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js",["126","127","128"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport { logOutUser } from '../actions/logOutUser';\nimport Logo from '../images/Logo.jpeg'\n\n\nclass NavBar extends React.Component{ \n\n    handleLogOut = () => {\n      this.props.logOutUser()\n      this.props.history.push(\"/signin\")\n      \n    }\n    handleCreatePost = () => {\n      this.props.history.push('/home/newpost')\n    }\n    \n    handleShowYourPosts = () => {\n      this.props.history.push('/yourposts')\n    }\n\n    handleDirectToFeed = () => {\n      this.props.history.push('/feed')\n    }\n    render(){\n    \n    \n      return (\n       \n\n        <div className=\"nav-div\">\n        <nav className=\"navbar navbar-light bg-light\">\n          {this.props.currentUser ? \n          <div>\n          <img className=\"logo\" src={Logo}/> \n          <button className=\"nav-button\"  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCreatePost} >Create Post</button>\n          <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDirectToFeed} >Feed</button>\n          <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleShowYourPosts} >View Your Posts</button>\n          <button className=\"nav-button\" type=\"button\" className=\"btn btn-light\" onClick={this.handleLogOut}>Sign Out </button>\n          </div>\n          :\n          null\n        } \n        </nav>\n      </div>\n  \n       );\n      };\n    }\n    \n    const mapDispatchToProps = {\n      logOutUser: logOutUser\n    }\n    \n    const mapStateToProps = (state) => {\n      return{\n      currentUser: state.currentUser\n      }\n    }\n    \n    export default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/showPublicPost.js",["129","130","131","132"],"import React from 'react' \nimport {connect} from 'react-redux'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport {deleteReview, selectPublicPostReviews} from '../actions/selectPublicPostReview'\nimport {selectReview}from '../actions/selectReview'\nimport ReviewCard from './ReviewCard'\n\n\n\nclass showPublicPost extends React.Component{\n    \n    renderReviews = () => {\n        return this.props.selectPublicPostReviews.map(reviewObj => {\n            return <ReviewCard key={reviewObj.id} review={reviewObj} />\n        })\n        \n    }\n\n    renderStars = () => {\n        if (this.props.selectPublicPost.authors_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.selectPublicPost.authors_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n    render(){\n\n        const {image_url, id, title, address, latitude, longitude, category, airspace, description, authors_rating, video} = this.props.selectPublicPost\n      \n  \n     \n        \n        return(\n\n            \n        <Container>\n                <br></br>\n                <br></br>\n            <Row>\n                <Col>      \n                    <div>\n                    <h1>{title}</h1>\n                    <br></br>\n                    <img width=\"400px\" height=\"300px\" src={image_url}></img>\n                    <p>Author's Rating {this.renderStars()}</p>\n                    <h5>Location Category:</h5>\n                    <p>{category}</p>\n                    <h5> Address: </h5>\n                    <p>{address}</p>\n                    <h5>Coordinates: </h5>\n                    <p>{latitude} {longitude}</p>\n                    <h5>Airspace Classification:</h5><p>{airspace}</p>\n                    <p> {description}</p>\n                    <br></br>\n                    </div>\n                </Col>\n                <Col>\n                <h1>Comments</h1>\n                <Card body>{this.renderReviews()} </Card>\n                <Button className=\"btn btn-secondary\" onClick={()=> this.props.history.push(`/reviewpost/${id}`)} id={id}>Leave Feedback </Button> \n                \n                </Col>\n            </Row>\n        </Container>\n        \n       \n\n        )\n    }\n\n}\n\n    const mapStateToProps = (state) => {\n        return {\n            selectPublicPost: state.selectPublicPost,\n            selectPublicPostReviews: state.selectPublicPostReviews,\n            currentUser: state.currentUser\n           \n        }\n    }\n\n    const mapDispatchToProps = {\n        deleteReview: deleteReview,\n        selectReview: selectReview\n    }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(showPublicPost)","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js",["133"],"const posts = (state=[], action) => {\n\n    let updatedPosts;\n\n    switch(action.type){\n        case \"SIGN_IN_USER\":\n        case \"SIGN_UP_USER\":\n        case \"CURRENT_USER\":\n            return action.user.posts\n        case \"CREATE_POST\":\n        return [...state, action.post]\n        case \"DELETE_POST\":\n            updatedPosts = state.filter(post => post.id !== action.id)\n                    return updatedPosts\n        case \"UPDATE_MY_POST\":\n            updatedPosts = state.map(postObj => {\n                if (postObj.id == action.post.id) {\n                    return action.post\n                } else {\n                    return postObj\n                }\n            })\n            return updatedPosts\n    default:\n        return state\n }\n}\n\nexport default posts\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/App.js",[],["134","135"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js",["136"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateMyPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport { Container, Col, Row} from 'react-bootstrap'\n\n\nclass EditPostForm extends React.Component {\n    state = {\n        image_url: this.props.selectMyPost.image_url,\n        title: this.props.selectMyPost.title,\n        user_id: this.props.selectMyPost.user_id,\n        address: this.props.selectMyPost.address,\n        latitude: this.props.selectMyPost.latitude,\n        longitude: this.props.selectMyPost.longitude,\n        category: this.props.selectMyPost.category,\n        airspace: this.props.selectMyPost.airspace,\n        description: this.props.selectMyPost.description,\n        authors_rating: this.props.selectMyPost.authors_rating,\n        video: this.props.selectMyPost.video\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleStarInput = (e) => {\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\") {\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({ authors_rating: rating })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`http://localhost:3000/posts/${this.props.selectMyPost.id}`, {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.state.user_id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n            .then(response => response.json())\n            .then(updatedPost => {\n                this.props.updateMyPost(updatedPost)\n                this.props.history.push('/yourposts')\n            })\n    }\n    renderCoords = (latLng) => {\n        this.setState({\n            latitude: latLng.lat,\n            longitude: latLng.lng\n        })\n    }\n    renderAddress = (address) => {\n        this.setState({\n            address: address\n        })\n    }\n    render() {\n        return (\n                <Container >\n                    <br></br>\n                    <br></br>\n                    <Row>\n                        <Col>\n                            <div>\n                            <MapContainer renderCoords={this.renderCoords} renderAddress={this.renderAddress}/>\n                            </div>\n                        </Col>\n                        <br></br>\n                        <Col>\n                            <div className=\"new-post-form\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <h5>Your New Fly Spot</h5>\n                                    <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title} name={\"title\"} placeholder=\"Title\" /><br></br> <br></br>\n                                    <div class=\"form-row\">\n                                        <div class=\"form-group col-md-6\">\n                                            <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name={\"address\"} placeholder=\"Address\" />\n                                            <br></br>\n                                            <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name={\"latitude\"} placeholder=\"Latitude\" />\n                                            <br></br>\n                                            <select onChange={this.handleStarInput} value={this.state.authors_rating} name={\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                                                <option selected>Rate This Spot</option>\n                                                <option>⭐</option>\n                                                <option>⭐⭐</option>\n                                                <option>⭐⭐⭐</option>\n                                                <option>⭐⭐⭐⭐</option>\n                                                <option>⭐⭐⭐⭐⭐</option>\n                                            </select>\n                                            <br></br>\n                                            <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name={\"image_url\"} placeholder=\"Photo URL\" />\n                                            <br></br>\n                                        </div>\n                                        <div class=\"form-group col-md-6\">\n                                                <select onChange={this.handleInputChange} value={this.state.category} name={\"category\"} placeholder=\"Category\" class=\"form-control\">\n                                                    <option selected>Area Category</option>\n                                                    <option>Urban</option>\n                                                    <option>Nature</option>\n                                                    <option>Industrial</option>\n                                                    <option>Park</option>\n                                                    <option>Other</option>\n                                                </select>\n                                                <br></br>\n                                                <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name={\"longitude\"} placeholder=\"Longitude\" />\n                                            <br></br>\n                                                <select onChange={this.handleInputChange} value={this.state.airspace} name={\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                                                    <option selected>Select Airspace Classification</option>\n                                                    <option>Class A</option>\n                                                    <option>Class B</option>\n                                                    <option>Class C</option>\n                                                    <option>Class D</option>\n                                                    <option>Class G</option>\n                                                </select>\n                                                <br></br>\n                                                <input class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name={\"video\"} placeholder=\"Youtube Video Link\" />\n                                        </div>\n                                        <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name={\"description\"} placeholder=\"Description\" rows=\"3\"></textarea>\n                                    </div>\n                                    <button type=\"submit\" class=\"btn btn-secondary\">Update</button>\n                                </form>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\nconst mapStateToProps = (state) => {\n    return {\n        post: state.post,\n        currentUser: state.currentUser,\n        selectMyPost: state.selectMyPost\n    }\n}\nconst mapDispatchToProps = {\n    updateMyPost: updateMyPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostForm)",["137","138"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reportWebVitals.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditReviewForm.js",[],["139","140"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/MapContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewCard.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js",["141","142","143"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Container, Col, Row} from 'react-bootstrap'\nclass NewPostForm extends React.Component{\n    state = {\n        image_url: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: ''\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleStarInput=(e)=>{\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\"){\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({authors_rating: rating})\n    }\n    handleSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n           console.log(newPostObj.id)\n            this.props.createPost(newPostObj)\n            this.props.history.push(\"/yourposts\")\n        })\n    }\nrenderCoords = (latLng) => {\n    this.setState({\n        latitude: latLng.lat,\n        longitude: latLng.lng\n    })\n}\nrenderAddress = (address) => {\n    this.setState({\n        address: address\n    })\n}\n    render(){\n        return(\n         <div className=\"form-container\">\n            \n            \n       \n                 \n                <div className=\"map\">\n                 <MapContainer renderCoords={this.renderCoords} renderAddress={this.renderAddress}/>\n                 </div>\n           \n           \n            \n            <div className=\"new-post-form\">\n            <form onSubmit={this.handleSubmit}>\n                <h5>Your New Fly Spot</h5>\n            <input type=\"text\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div >\n                <div>\n                    <input   onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input   onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input   onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div>\n                        <div class=\"new-post-form\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n            <button type=\"submit\" class=\"btn btn-secondary\">Post It</button>\n            </form>\n        </div>   \n        </div>\n       \n         )\n    }\n }\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser,\n        getMapCoordinates: state.getMapCoordinates,\n        getMapAddress: state.getMapAddress\n    }\n}\nconst mapDispatchToProps = { \n    createPost: createPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js",["144"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form} from 'react-bootstrap'\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {           \n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n        \n        <div className=\"signin-container\">\n            <div className=\"welcome-container\">\n              \n\n                <h1 className=\"welcome\"> Welcome to FlySpot</h1>\n               \n                <h2 className=\"please-login\"> Please Log In</h2>\n            </div>\n           \n            <br></br>\n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <input  name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                    <input  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                </div>\n                 <button type=\"submit\" class=\"btn btn-secondary\">Log In</button>\n                 <button type=\"submit\" onClick={this.redirectToSignUp} class=\"btn btn-secondary\">Sign up</button>\n            </form>\n        </div>\n        \n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":14,"column":38,"nodeType":"151","messageId":"152","endLine":14,"endColumn":40},{"ruleId":"145","replacedBy":"153"},{"ruleId":"147","replacedBy":"154"},{"ruleId":"145","replacedBy":"155"},{"ruleId":"147","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":36,"column":11,"nodeType":"159","endLine":36,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":37,"column":57,"nodeType":"162","endLine":37,"endColumn":86},{"ruleId":"160","severity":1,"message":"161","line":40,"column":56,"nodeType":"162","endLine":40,"endColumn":81},{"ruleId":"163","severity":1,"message":"164","line":4,"column":23,"nodeType":"165","messageId":"166","endLine":4,"endColumn":46},{"ruleId":"163","severity":1,"message":"167","line":33,"column":101,"nodeType":"165","messageId":"166","endLine":33,"endColumn":115},{"ruleId":"163","severity":1,"message":"168","line":33,"column":117,"nodeType":"165","messageId":"166","endLine":33,"endColumn":122},{"ruleId":"157","severity":1,"message":"158","line":49,"column":21,"nodeType":"159","endLine":49,"endColumn":71},{"ruleId":"149","severity":1,"message":"150","line":17,"column":32,"nodeType":"151","messageId":"152","endLine":17,"endColumn":34},{"ruleId":"145","replacedBy":"169"},{"ruleId":"147","replacedBy":"170"},{"ruleId":"163","severity":1,"message":"171","line":44,"column":15,"nodeType":"165","messageId":"166","endLine":44,"endColumn":17},{"ruleId":"145","replacedBy":"172"},{"ruleId":"147","replacedBy":"173"},{"ruleId":"145","replacedBy":"174"},{"ruleId":"147","replacedBy":"175"},{"ruleId":"163","severity":1,"message":"176","line":5,"column":9,"nodeType":"165","messageId":"166","endLine":5,"endColumn":18},{"ruleId":"163","severity":1,"message":"177","line":5,"column":20,"nodeType":"165","messageId":"166","endLine":5,"endColumn":23},{"ruleId":"163","severity":1,"message":"178","line":5,"column":25,"nodeType":"165","messageId":"166","endLine":5,"endColumn":28},{"ruleId":"163","severity":1,"message":"179","line":4,"column":9,"nodeType":"165","messageId":"166","endLine":4,"endColumn":13},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["180"],["181"],["180"],["181"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'selectPublicPostReviews' is defined but never used.","Identifier","unusedVar","'authors_rating' is assigned a value but never used.","'video' is assigned a value but never used.",["180"],["181"],"'id' is assigned a value but never used.",["180"],["181"],["180"],["181"],"'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]