[{"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/App.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditReviewForm.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewPublicPost.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewCard.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/signinUser.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostCard.js":"22"},{"size":776,"mtime":1616087605466,"results":"23","hashOfConfig":"24"},{"size":1774,"mtime":1639521905543,"results":"25","hashOfConfig":"24"},{"size":2287,"mtime":1639686619404,"results":"26","hashOfConfig":"24"},{"size":219,"mtime":1612920290001,"results":"27","hashOfConfig":"24"},{"size":6951,"mtime":1639686403366,"results":"28","hashOfConfig":"24"},{"size":845,"mtime":1613493107229,"results":"29","hashOfConfig":"24"},{"size":892,"mtime":1638813143279,"results":"30","hashOfConfig":"24"},{"size":217,"mtime":1613493107230,"results":"31","hashOfConfig":"24"},{"size":2896,"mtime":1639686421800,"results":"32","hashOfConfig":"24"},{"size":2554,"mtime":1639686582639,"results":"33","hashOfConfig":"24"},{"size":2985,"mtime":1639686549819,"results":"34","hashOfConfig":"24"},{"size":739,"mtime":1639078877695,"results":"35","hashOfConfig":"24"},{"size":714,"mtime":1615494873570,"results":"36","hashOfConfig":"24"},{"size":6975,"mtime":1639686475215,"results":"37","hashOfConfig":"24"},{"size":379,"mtime":1618948485894,"results":"38","hashOfConfig":"24"},{"size":2464,"mtime":1639686539895,"results":"39","hashOfConfig":"24"},{"size":216,"mtime":1612720215687,"results":"40","hashOfConfig":"24"},{"size":218,"mtime":1612895274926,"results":"41","hashOfConfig":"24"},{"size":231,"mtime":1612922217875,"results":"42","hashOfConfig":"24"},{"size":2392,"mtime":1639686600862,"results":"43","hashOfConfig":"24"},{"size":1284,"mtime":1639686431893,"results":"44","hashOfConfig":"24"},{"size":2500,"mtime":1639686492269,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1q4n5vx",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js",["96"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js",["97"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport { logOutUser } from '../actions/logOutUser';\nimport Logo from '../images/Logo.jpeg'\nimport { Nav, Navbar } from 'react-bootstrap';\n\n\nclass NavBar extends React.Component{ \n\n    handleLogOut = () => {\n      this.props.logOutUser()\n      this.props.history.push(\"/signin\")\n      \n    }\n    handleCreatePost = () => {\n      this.props.history.push('/home/newpost')\n    }\n    \n    handleShowYourPosts = () => {\n      this.props.history.push('/yourposts')\n    }\n\n    handleDirectToFeed = () => {\n      this.props.history.push('/feed')\n    }\n    render(){\n    \n    \n      return (\n       \n\n         \n        \n        <>\n          {this.props.currentUser ? \n            <Nav className=\"nav-style\" fill >\n              \n                <Navbar.Brand ><img className=\"logo\" onCLick={this.handleDirectToFeed} src={Logo}/> </Navbar.Brand>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleCreatePost}>  Create Post </h1> </Nav.Item>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleShowYourPosts}>Your Posts</h1></Nav.Item>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleDirectToFeed}> Feed </h1></Nav.Item>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleLogOut}>Sign Out </h1> </Nav.Item>\n            </Nav>\n          :\n          null\n          }\n          </>\n    \n     \n  \n       );\n      };\n    }\n    \n    const mapDispatchToProps = {\n      logOutUser: logOutUser\n    }\n    \n    const mapStateToProps = (state) => {\n      return{\n      currentUser: state.currentUser\n      }\n    }\n    \n    export default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))",["98","99"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/App.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js",["100"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateMyPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport { Container, Col, Row, Form} from 'react-bootstrap'\n\n\nclass EditPostForm extends React.Component {\n    state = {\n        image_url: this.props.selectMyPost.image_url,\n        title: this.props.selectMyPost.title,\n        user_id: this.props.selectMyPost.user_id,\n        address: this.props.selectMyPost.address,\n        latitude: this.props.selectMyPost.latitude,\n        longitude: this.props.selectMyPost.longitude,\n        category: this.props.selectMyPost.category,\n        airspace: this.props.selectMyPost.airspace,\n        description: this.props.selectMyPost.description,\n        authors_rating: this.props.selectMyPost.authors_rating,\n        video: this.props.selectMyPost.video\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleStarInput = (e) => {\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\") {\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({ authors_rating: rating })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`https://flyspot-backend.herokuapp.com/posts/${this.props.selectMyPost.id}`, {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.state.user_id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n            .then(response => response.json())\n            .then(updatedPost => {\n                this.props.updateMyPost(updatedPost)\n                this.props.history.push('/yourposts')\n            })\n    }\n    renderCoords = (latLng) => {\n        this.setState({\n            latitude: latLng.lat,\n            longitude: latLng.lng\n        })\n    }\n    renderAddress = (address) => {\n        this.setState({\n            address: address\n        })\n    }\n    render() {\n        return (\n            <Container>\n                 \n            <Row>\n\n             \n                <Col className= \"leftside\">\n                    <MapContainer renderCoords={this.renderCoords} renderAddress={this.renderAddress}/>\n                </Col>\n           \n      \n                <Col className=\"rightside\"> \n\n                    <Form onSubmit={this.handleSubmit}>\n                        <h5 className=\"post-form-h5\">Your New Fly Spot</h5>\n                    \n\n                        <Form.Control type=\"text\"  onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/>\n\n                \n\n                        <Form.Control  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                    \n            \n                        <Form.Control  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                \n            \n                            <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                                <option selected>Rate This Spot</option>\n                                <option>⭐</option>\n                                <option>⭐⭐</option>\n                                <option>⭐⭐⭐</option>\n                                <option>⭐⭐⭐⭐</option>\n                                <option>⭐⭐⭐⭐⭐</option>\n                            </select>\n\n\n                        <Form.Control  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                    \n            \n                        \n\n                            <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                            <option selected>Area Category</option>\n                            <option>Urban</option>\n                            <option>Nature</option>\n                            <option>Industrial</option>\n                            <option>Park</option>\n                            <option>Other</option>\n                            </select>\n\n            \n\n                        <Form.Control  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                        \n                \n                                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                                <option selected>Select Airspace Classification</option>\n                                <option>Class A</option>\n                                <option>Class B</option>\n                                <option>Class C</option>\n                                <option>Class D</option>\n                                <option>Class G</option>\n                                </select>\n\n                \n                        <Form.Control  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n\n                                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                                    \n                                <button type=\"submit\" class=\"btn btn-secondary\">Post It</button>\n                </Form>\n                </Col>\n          \n             </Row>\n        \n        </Container>\n       \n            )\n        }\n    }\nconst mapStateToProps = (state) => {\n    return {\n        post: state.post,\n        currentUser: state.currentUser,\n        selectMyPost: state.selectMyPost\n    }\n}\nconst mapDispatchToProps = {\n    updateMyPost: updateMyPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostForm)","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js",["101"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews",["102","103"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js",["104"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js",[],["105","106"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/ReviewCard.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostCard.js",[],{"ruleId":"107","severity":1,"message":"108","line":17,"column":32,"nodeType":"109","messageId":"110","endLine":17,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":39,"column":32,"nodeType":"113","endLine":39,"endColumn":100},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":44,"column":15,"nodeType":"120","messageId":"121","endLine":44,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":14,"column":38,"nodeType":"109","messageId":"110","endLine":14,"endColumn":40},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":78,"column":136,"nodeType":"126","endLine":78,"endColumn":163},{"ruleId":"114","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar",["129"],["130"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["129"],["130"],"no-global-assign","no-unsafe-negation"]