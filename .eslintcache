[{"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewCard.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NavBar.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPostReview.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPost.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js":"22","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js":"23","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js":"24","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js":"25","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js":"26"},{"size":231,"mtime":1612922217875,"results":"27","hashOfConfig":"28"},{"size":2041,"mtime":1613609165817,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1612295974335,"results":"30","hashOfConfig":"28"},{"size":217,"mtime":1613493107230,"results":"31","hashOfConfig":"28"},{"size":2309,"mtime":1613493107210,"results":"32","hashOfConfig":"28"},{"size":3191,"mtime":1613594623564,"results":"33","hashOfConfig":"28"},{"size":658,"mtime":1613607663448,"results":"34","hashOfConfig":"28"},{"size":2547,"mtime":1613585616885,"results":"35","hashOfConfig":"28"},{"size":895,"mtime":1613527861050,"results":"36","hashOfConfig":"28"},{"size":794,"mtime":1613511652446,"results":"37","hashOfConfig":"28"},{"size":1669,"mtime":1613493107205,"results":"38","hashOfConfig":"28"},{"size":7105,"mtime":1613608569805,"results":"39","hashOfConfig":"28"},{"size":2044,"mtime":1613493107212,"results":"40","hashOfConfig":"28"},{"size":219,"mtime":1612920290001,"results":"41","hashOfConfig":"28"},{"size":3451,"mtime":1613594984587,"results":"42","hashOfConfig":"28"},{"size":2331,"mtime":1613527948190,"results":"43","hashOfConfig":"28"},{"size":3370,"mtime":1613611486622,"results":"44","hashOfConfig":"28"},{"size":508,"mtime":1613493107198,"results":"45","hashOfConfig":"28"},{"size":713,"mtime":1613493107228,"results":"46","hashOfConfig":"28"},{"size":218,"mtime":1612895274926,"results":"47","hashOfConfig":"28"},{"size":137,"mtime":1612921987405,"results":"48","hashOfConfig":"28"},{"size":6351,"mtime":1613607133616,"results":"49","hashOfConfig":"28"},{"size":216,"mtime":1612720215687,"results":"50","hashOfConfig":"28"},{"size":2224,"mtime":1613610539236,"results":"51","hashOfConfig":"28"},{"size":2860,"mtime":1613610364141,"results":"52","hashOfConfig":"28"},{"size":379,"mtime":1612895897975,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tdv2vp",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js",[],["117","118"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js",[],["119","120"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js",["121"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form} from 'react-bootstrap'\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"bart\",\n        password: \"123\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {                         ////then back end sends  back user obj after verifying in backend\n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n            \n        <div className=\"background\">\n            <div className=\"whitefont\">\n                <h1> Welcome</h1>\n                <h2> Please Log In</h2>\n            </div>\n           \n            <br></br>\n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <input  name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                    <input  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                </div>\n                 <button type=\"submit\" class=\"btn btn-secondary\">Log In</button>\n                 <button type=\"submit\" onClick={this.redirectToSignUp} class=\"btn btn-secondary\">Sign up</button>\n            </form>\n        </div>\n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js",[],["122","123"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewCard.js",["124","125"],"import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport { currentUser } from '../actions/signinUser'\nimport {deleteReview} from '../actions/selectPublicPostReview'\nimport {selectReview}from '../actions/selectReview'\nimport {withRouter} from 'react-router-dom'\n\nclass ReviewCard extends React.Component{\n\n\n     \n    handleEdit = (e) => {\n        // console.log(e.target)\n        this.props.selectReview(this.props.review)\n        this.props.history.push(`/edit-review/${this.props.review.id}`)\n    }\n\n\n    handleDeleteReview = (e) => {\n        const id = parseInt(e.target.id)\n        console.log(id)\n        fetch(`http://localhost:3000/reviews/${id}`, {\n            method: \"DELETE\"\n          \n        })\n        .then(resp => resp.json())\n        .then(() => {\n            this.props.deleteReview(id)\n         console.log(id)\n            this.props.history.push(`/show-post/${this.props.selectPublicPost.id}`)\n        })\n    }\n\n    renderStars = () => {\n        if (this.props.review.user_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.review.user_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.review.user_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.review.user_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.review.user_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n    render(){\n            const {id, user_id, comment, user_rating} = this.props.review\n\n        return(\n\n                \n            <Card> \n                 \n                users rating: { this.renderStars()}<br></br>\n                {comment} <br></br>\n\n                {user_id === this.props.currentUser.id ? \n                <div>\n                <Button className=\"btn btn-secondary\" onClick={this.handleEdit}>  Edit Review</Button>\n                <Button className=\"btn btn-secondary\" id={id} onClick={this.handleDeleteReview}> Delete Review </Button>\n                </div>\n                :\n                null\n                \n            }\n            </Card>\n        )\n        \n}\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        selectPublicPost: state.selectPublicPost,\n        selectPublicPostReviews: state.selectPublicPostReviews,\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteReview: deleteReview,\n    selectReview: selectReview\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReviewCard)) ","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js",["126"],"const posts = (state=[], action) => {\n\n    let updatedPosts;\n\n    switch(action.type){\n        case \"SIGN_IN_USER\":\n        case \"CURRENT_USER\":\n            return action.user.posts\n        case \"CREATE_POST\":\n        return [...state, action.post]\n        case \"DELETE_POST\":\n            updatedPosts = state.filter(post => post.id !== action.id)\n                    return updatedPosts\n        case \"UPDATE_MY_POST\":\n            updatedPosts = state.map(postObj => {\n                if (postObj.id == action.post.id) {\n                    return action.post\n                } else {\n                    return postObj\n                }\n            })\n            return updatedPosts\n    default:\n        return state\n }\n}\n\nexport default posts\n\n// THIS REDUCER IS RESPONIBLE FOR MY POSTS ONLY",["127","128"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NavBar.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js",["129","130","131"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {updateMyPost} from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\n\n\nclass EditPostForm extends React.Component {\n            state = {\n                image_url: this.props.selectMyPost.image_url,\n                title: this.props.selectMyPost.title,\n                user_id: this.props.selectMyPost.user_id,\n                address: this.props.selectMyPost.address,\n                latitude: this.props.selectMyPost.latitude,\n                longitude: this.props.selectMyPost.longitude,\n                category: this.props.selectMyPost.category,\n                airspace: this.props.selectMyPost.airspace,\n                description: this.props.selectMyPost.description,\n                authors_rating: this.props.selectMyPost.authors_rating,\n                video: this.props.selectMyPost.video\n        \n            }\n        handleInputChange = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n\n        handleStarInput=(e)=>{\n            let rating;\n            if (e.target.value === \"⭐\") {\n                rating = 1\n            } else if (e.target.value === \"⭐⭐\") {\n                rating = 2\n            } else if (e.target.value === \"⭐⭐⭐\") {\n                rating = 3\n            } else if (e.target.value === \"⭐⭐⭐⭐\"){\n                rating = 4\n            } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n                rating = 5\n            }\n            this.setState({authors_rating: rating})\n           \n        }\n\n        handleSubmit = (e) => {\n         \n            e.preventDefault()\n        \n            const id = e.target.id\n            console.log(e.target)\n            \n            fetch(`http://localhost:3000/posts/${this.props.selectMyPost.id}`, {\n                method: \"PATCH\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    image_url: this.state.image_url,\n                    title: this.state.title,\n                    user_id: this.state.user_id,\n                    address: this.state.address,\n                    latitude: this.state.latitude,\n                    longitude: this.state.longitude,\n                    category: this.state.category,\n                    airspace: this.state.airspace,\n                    description: this.state.description,\n                    authors_rating: this.state.authors_rating,\n                    video: this.state.video\n                })\n            })\n            .then(response => response.json())\n            .then(updatedPost => {\n                console.log(updatedPost)\n             \n                this.props.updateMyPost(updatedPost)\n                this.props.history.push('/your-posts')\n            })\n        }\n        render(){\n\n            \n            return(\n                <Container >\n                <br></br>\n                <br></br>\n            <Row>\n                <Col>      \n                    <div>\n                     <MapContainer/>\n                     </div>\n                </Col>\n                <br></br>\n                <Col>\n                <div className=\"new-post-form\">\n        <form onSubmit={this.handleSubmit}>\n         <h5>Your New Fly Spot</h5>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n          \n            <button type=\"submit\" class=\"btn btn-secondary\">Update</button>\n            </form>\n        </div>   \n                </Col>\n            </Row>\n        </Container>\n    \n            )\n        }\n    }\n    const mapStateToProps = (state) => {\n        return {\n            post: state.post,\n            currentUser: state.currentUser,\n            selectMyPost: state.selectMyPost\n        }\n    }\n    const mapDispatchToProps = {\n        updateMyPost: updateMyPost\n    } \n    export default connect(mapStateToProps, mapDispatchToProps)(EditPostForm)\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js",["132"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js",["133"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPostReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js",["134","135"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\n\nclass NewPostForm extends React.Component{\n\n    state = {\n        image_url: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: '',\n        longitude: '',\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: ''\n       \n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n\n    handleStarInput=(e)=>{\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\"){\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({authors_rating: rating})\n       \n    }\n\n    handleSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n           console.log(newPostObj)\n            this.props.createPost(newPostObj)\n            this.props.history.push(\"/your-posts\")\n            \n        })\n    }\n\n   \n    render(){\n        return(\n            \n\n\n         <Container >\n            <br></br>\n            <br></br>\n        <Row>\n            <Col>      \n                <div>\n                 <MapContainer/>\n                 </div>\n            </Col>\n            <br></br>\n            <Col>\n            <div className=\"new-post-form\">\n        <form onSubmit={this.handleSubmit}>\n         <h5>Your New Fly Spot</h5>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n          \n            <button type=\"submit\" class=\"btn btn-secondary\">Post It</button>\n            </form>\n        </div>   \n            </Col>\n        </Row>\n    </Container>\n\n\n\n         )\n    }\n }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n        \n    }\n}\n\nconst mapDispatchToProps = { \n    createPost: createPost\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js",["136","137","138","139","140","141","142","143","144"],"import React from 'react'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport {withRouter} from 'react-router-dom'\nimport { selectPublicPost } from '../actions/selectPublicPost'\nimport {connect} from 'react-redux'\nimport {selectPublicPostReviews} from '../actions/selectPublicPostReview'\n\nclass FeedCard extends React.Component{\n\n\n    handleShowPost = (e) => {\n        const id = e.target.id\n        this.props.selectPublicPost(this.props.post)\n        this.props.selectPublicPostReviews(this.props.post.reviews)\n        this.props.history.push(`/show-post/${id}`)\n    }\n\n    renderStars = () => {\n        if (this.props.post.authors_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.post.authors_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.post.authors_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.post.authors_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.post.authors_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n\n    render(){\n        \n        const {image_url, authors_rating, title, id, address, latitude, longitude, category, description, airspace } = this.props.post\n        return(\n\n\n\n\n\n\n\n                \n                \n\n\n                <div className=\"feed-card\">\n                    <br></br>\n                    <Card  style={{ width: '30rem'}}>\n                    <Card.Header>{title}</Card.Header>\n                    <Card.Img variant=\"top\" src={image_url} />\n                    <Card.Body>\n                        <Card.Text className=\"card-text\">\n                        <h5>{description}</h5>\n                        <h5>Author's Rating{this.renderStars()}</h5>\n                        </Card.Text>\n                        <Button onClick={this.handleShowPost} id={id} variant=\"secondary\">View</Button>\n                    </Card.Body>\n                    </Card>\n                </div>\n                  \n               \n          \n\n\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    selectPublicPost: selectPublicPost,\n    selectPublicPostReviews: selectPublicPostReviews\n}\n\n\nexport default connect(null, mapDispatchToProps)(withRouter(FeedCard))","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js",["145","146","147","148"],"import React from 'react' \nimport {connect} from 'react-redux'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport {deleteReview, selectPublicPostReviews} from '../actions/selectPublicPostReview'\nimport {selectReview}from '../actions/selectReview'\nimport ReviewCard from './ReviewCard'\n\n\n\nclass showPublicPost extends React.Component{\n    \n    handleEdit = (e) => {\n        console.log(e.target)\n    }\n\n\n\n    renderReviews = () => {\n        return this.props.selectPublicPostReviews.map(reviewObj => {\n            return <ReviewCard key={reviewObj.id} review={reviewObj} />\n        })\n        \n    }\n\n    renderStars = () => {\n        if (this.props.selectPublicPost.authors_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.selectPublicPost.authors_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.selectPublicPost.authors_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n    render(){\n\n        const {image_url, id, title, address, latitude, longitude, category, airspace, description, authors_rating, video} = this.props.selectPublicPost\n      \n  \n     \n        \n        return(\n\n            \n        <Container>\n                <br></br>\n                <br></br>\n            <Row>\n                <Col>      \n                    <div>\n                    <h1>{title}</h1>\n                    <img width=\"400px\" height=\"300px\" src={image_url}></img>\n                    <h5>Location Type: {category}</h5>\n                    <p>Latitude & Longitude: {latitude} {longitude}</p>\n                    <p> Address: {address}</p>\n                    <p>Airspace CLassification: {airspace}</p>\n                    <p>Description: {description}</p>\n                    <p>Author's Rating{this.renderStars()}</p>\n                    </div>\n                </Col>\n                <Col>\n                <h1>Comments</h1>\n                <Card body>{this.renderReviews()} </Card>\n                <Button className=\"btn btn-secondary\" onClick={()=> this.props.history.push(`/review-post/${id}`)} id={id}>Leave Feedback </Button> \n                \n                </Col>\n            </Row>\n        </Container>\n        \n       \n\n        )\n    }\n\n}\n\n    const mapStateToProps = (state) => {\n        return {\n            selectPublicPost: state.selectPublicPost,\n            selectPublicPostReviews: state.selectPublicPostReviews,\n            currentUser: state.currentUser\n           \n        }\n    }\n\n    const mapDispatchToProps = {\n        deleteReview: deleteReview,\n        selectReview: selectReview\n    }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(showPublicPost)","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"149","replacedBy":"153"},{"ruleId":"151","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"149","replacedBy":"159"},{"ruleId":"151","replacedBy":"160"},{"ruleId":"155","severity":1,"message":"161","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":21},{"ruleId":"155","severity":1,"message":"162","line":48,"column":42,"nodeType":"157","messageId":"158","endLine":48,"endColumn":53},{"ruleId":"163","severity":1,"message":"164","line":16,"column":32,"nodeType":"165","messageId":"166","endLine":16,"endColumn":34},{"ruleId":"149","replacedBy":"167"},{"ruleId":"151","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"169","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":15},{"ruleId":"155","severity":1,"message":"170","line":5,"column":38,"nodeType":"157","messageId":"158","endLine":5,"endColumn":42},{"ruleId":"155","severity":1,"message":"171","line":50,"column":19,"nodeType":"157","messageId":"158","endLine":50,"endColumn":21},{"ruleId":"155","severity":1,"message":"172","line":3,"column":9,"nodeType":"157","messageId":"158","endLine":3,"endColumn":22},{"ruleId":"155","severity":1,"message":"173","line":45,"column":11,"nodeType":"157","messageId":"158","endLine":45,"endColumn":16},{"ruleId":"155","severity":1,"message":"169","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":15},{"ruleId":"155","severity":1,"message":"170","line":5,"column":38,"nodeType":"157","messageId":"158","endLine":5,"endColumn":42},{"ruleId":"155","severity":1,"message":"174","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"175","line":2,"column":28,"nodeType":"157","messageId":"158","endLine":2,"endColumn":31},{"ruleId":"155","severity":1,"message":"176","line":2,"column":33,"nodeType":"157","messageId":"158","endLine":2,"endColumn":36},{"ruleId":"155","severity":1,"message":"177","line":33,"column":27,"nodeType":"157","messageId":"158","endLine":33,"endColumn":41},{"ruleId":"155","severity":1,"message":"178","line":33,"column":54,"nodeType":"157","messageId":"158","endLine":33,"endColumn":61},{"ruleId":"155","severity":1,"message":"179","line":33,"column":63,"nodeType":"157","messageId":"158","endLine":33,"endColumn":71},{"ruleId":"155","severity":1,"message":"180","line":33,"column":73,"nodeType":"157","messageId":"158","endLine":33,"endColumn":82},{"ruleId":"155","severity":1,"message":"181","line":33,"column":84,"nodeType":"157","messageId":"158","endLine":33,"endColumn":92},{"ruleId":"155","severity":1,"message":"182","line":33,"column":107,"nodeType":"157","messageId":"158","endLine":33,"endColumn":115},{"ruleId":"155","severity":1,"message":"183","line":4,"column":23,"nodeType":"157","messageId":"158","endLine":4,"endColumn":46},{"ruleId":"155","severity":1,"message":"177","line":39,"column":101,"nodeType":"157","messageId":"158","endLine":39,"endColumn":115},{"ruleId":"155","severity":1,"message":"184","line":39,"column":117,"nodeType":"157","messageId":"158","endLine":39,"endColumn":122},{"ruleId":"185","severity":1,"message":"186","line":54,"column":21,"nodeType":"187","endLine":54,"endColumn":71},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],["188"],["189"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar",["188"],["189"],"'currentUser' is defined but never used.","'user_rating' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["188"],["189"],"'Button' is defined but never used.","'Card' is defined but never used.","'id' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'style' is assigned a value but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'authors_rating' is assigned a value but never used.","'address' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'category' is assigned a value but never used.","'airspace' is assigned a value but never used.","'selectPublicPostReviews' is defined but never used.","'video' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]