[{"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewCard.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NavBar.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPostReview.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPost.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js":"22","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js":"23","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js":"24","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js":"25","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js":"26","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/logOutUser.js":"27","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectReview.js":"28"},{"size":231,"mtime":1612922217875,"results":"29","hashOfConfig":"30"},{"size":2136,"mtime":1613671645455,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1612295974335,"results":"32","hashOfConfig":"30"},{"size":217,"mtime":1613493107230,"results":"33","hashOfConfig":"30"},{"size":2451,"mtime":1613670346545,"results":"34","hashOfConfig":"30"},{"size":3191,"mtime":1613594623564,"results":"35","hashOfConfig":"30"},{"size":658,"mtime":1613607663448,"results":"36","hashOfConfig":"30"},{"size":2546,"mtime":1613669758009,"results":"37","hashOfConfig":"30"},{"size":895,"mtime":1613527861050,"results":"38","hashOfConfig":"30"},{"size":794,"mtime":1613511652446,"results":"39","hashOfConfig":"30"},{"size":2969,"mtime":1613669411009,"results":"40","hashOfConfig":"30"},{"size":7105,"mtime":1613608569805,"results":"41","hashOfConfig":"30"},{"size":2174,"mtime":1613673056877,"results":"42","hashOfConfig":"30"},{"size":219,"mtime":1612920290001,"results":"43","hashOfConfig":"30"},{"size":3451,"mtime":1613594984587,"results":"44","hashOfConfig":"30"},{"size":2331,"mtime":1613527948190,"results":"45","hashOfConfig":"30"},{"size":3370,"mtime":1613611486622,"results":"46","hashOfConfig":"30"},{"size":508,"mtime":1613493107198,"results":"47","hashOfConfig":"30"},{"size":713,"mtime":1613493107228,"results":"48","hashOfConfig":"30"},{"size":218,"mtime":1612895274926,"results":"49","hashOfConfig":"30"},{"size":137,"mtime":1612921987405,"results":"50","hashOfConfig":"30"},{"size":6351,"mtime":1613607133616,"results":"51","hashOfConfig":"30"},{"size":216,"mtime":1612720215687,"results":"52","hashOfConfig":"30"},{"size":2277,"mtime":1613671779333,"results":"53","hashOfConfig":"30"},{"size":2938,"mtime":1613673603842,"results":"54","hashOfConfig":"30"},{"size":379,"mtime":1612895897975,"results":"55","hashOfConfig":"30"},{"size":85,"mtime":1612828033326,"results":"56","hashOfConfig":"30"},{"size":117,"mtime":1613493107199,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tdv2vp",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js",[],["128","129"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js",[],["130","131"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js",["132"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form} from 'react-bootstrap'\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"bart\",\n        password: \"123\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {                         ////then back end sends  back user obj after verifying in backend\n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n            \n        <div className=\"background\">\n            <div className=\"whitefont\">\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n\n                <h1> Welcome to FlySpot</h1>\n                <br></br>\n                <h2> Please Log In</h2>\n            </div>\n           \n            <br></br>\n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <input  name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                    <input  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                </div>\n                 <button type=\"submit\" class=\"btn btn-secondary\">Log In</button>\n                 <button type=\"submit\" onClick={this.redirectToSignUp} class=\"btn btn-secondary\">Sign up</button>\n            </form>\n        </div>\n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js",[],["133","134"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewCard.js",["135","136"],"import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport { currentUser } from '../actions/signinUser'\nimport {deleteReview} from '../actions/selectPublicPostReview'\nimport {selectReview}from '../actions/selectReview'\nimport {withRouter} from 'react-router-dom'\n\nclass ReviewCard extends React.Component{\n\n\n     \n    handleEdit = (e) => {\n        // console.log(e.target)\n        this.props.selectReview(this.props.review)\n        this.props.history.push(`/edit-review/${this.props.review.id}`)\n    }\n\n\n    handleDeleteReview = (e) => {\n        const id = parseInt(e.target.id)\n        console.log(id)\n        fetch(`http://localhost:3000/reviews/${id}`, {\n            method: \"DELETE\"\n          \n        })\n        .then(resp => resp.json())\n        .then(() => {\n            this.props.deleteReview(id)\n         console.log(id)\n            this.props.history.push(`/show-post/${this.props.selectPublicPost.id}`)\n        })\n    }\n\n    renderStars = () => {\n        if (this.props.review.user_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.review.user_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.review.user_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.review.user_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.review.user_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n    render(){\n            const {id, user_id, comment, user_rating} = this.props.review\n\n        return(\n\n                \n            <Card> \n                 \n                Peer rating: { this.renderStars()}<br></br>\n                {comment} <br></br>\n\n                {user_id === this.props.currentUser.id ? \n                <div>\n                <Button className=\"btn btn-secondary\" onClick={this.handleEdit}>  Edit Review</Button>\n                <Button className=\"btn btn-secondary\" id={id} onClick={this.handleDeleteReview}> Delete Review </Button>\n                </div>\n                :\n                null\n                \n            }\n            </Card>\n        )\n        \n}\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        selectPublicPost: state.selectPublicPost,\n        selectPublicPostReviews: state.selectPublicPostReviews,\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteReview: deleteReview,\n    selectReview: selectReview\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ReviewCard)) ","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js",[],["137","138"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js",["139"],"const posts = (state=[], action) => {\n\n    let updatedPosts;\n\n    switch(action.type){\n        case \"SIGN_IN_USER\":\n        case \"CURRENT_USER\":\n            return action.user.posts\n        case \"CREATE_POST\":\n        return [...state, action.post]\n        case \"DELETE_POST\":\n            updatedPosts = state.filter(post => post.id !== action.id)\n                    return updatedPosts\n        case \"UPDATE_MY_POST\":\n            updatedPosts = state.map(postObj => {\n                if (postObj.id == action.post.id) {\n                    return action.post\n                } else {\n                    return postObj\n                }\n            })\n            return updatedPosts\n    default:\n        return state\n }\n}\n\nexport default posts\n\n// THIS REDUCER IS RESPONIBLE FOR MY POSTS ONLY",["140","141"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NavBar.js",["142","143","144","145","146","147","148"],"import React from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport { logOutUser } from '../actions/logOutUser';\nimport Logo from '../images/Logo.jpeg'\n\n\nclass NavBar extends React.Component{ \n\n    handleLogOut = () => {\n      this.props.logOutUser()\n      this.props.history.push(\"/signin\")\n      \n    }\n    handleCreatePost = () => {\n      this.props.history.push('/home/new-post')\n    }\n    \n    handleShowYourPosts = () => {\n      this.props.history.push('/your-posts')\n    }\n\n    handleDirectToFeed = () => {\n      this.props.history.push('/feed')\n    }\n    render(){\n    \n    \n      return (\n       \n\n        <div className=\"nav-div\">\n        <nav className=\"navbar navbar-light bg-light\">\n          {this.props.currentUser ? \n          <div>\n          <img className=\"logo\" src={Logo}/> \n          <button className=\"nav-button\"  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCreatePost} >Create Post</button>\n          <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDirectToFeed} >Feed</button>\n          <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleShowYourPosts} >View Your Posts</button>\n          <button className=\"nav-button\" type=\"button\" className=\"btn btn-light\" onClick={this.handleLogOut}>Sign Out </button>\n          </div>\n          :\n          null\n        } \n        </nav>\n      </div>\n\n\n\n\n\n\n\n\n\n        // <div className=\"nav-div\">\n        //   {this.props.currentUser ? \n        // <Container fluid>\n        // <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\n\n        //   <Col className=\"text-center\" lg={3}>\n        //   <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCreatePost} >Create Post</button>\n        //   </Col>\n\n        //   <Col className=\"text-center\" lg={3}>\n        //   <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDirectToFeed} >Feed</button>\n        //   </Col>\n\n        //   <Col className=\"text-center\" lg={3}>\n        //   <button  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleShowYourPosts} >View Your Posts</button>\n        //   </Col>\n\n        //   <Col className=\"text-center\" lg={3}>\n        //   <button type=\"button\" className=\"btn btn-light\" onClick={this.handleLogOut}>Sign Out</button>\n        //   </Col>\n        //   </Navbar>\n        //   </Container>\n        //   :\n        //   null}\n        //   </div>\n\n       \n  \n       );\n      };\n    }\n    \n    const mapDispatchToProps = {\n      logOutUser: logOutUser\n    }\n    \n    const mapStateToProps = (state) => {\n      return{\n      currentUser: state.currentUser\n      }\n    }\n    \n    export default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js",["149","150","151"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {updateMyPost} from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\n\n\nclass EditPostForm extends React.Component {\n            state = {\n                image_url: this.props.selectMyPost.image_url,\n                title: this.props.selectMyPost.title,\n                user_id: this.props.selectMyPost.user_id,\n                address: this.props.selectMyPost.address,\n                latitude: this.props.selectMyPost.latitude,\n                longitude: this.props.selectMyPost.longitude,\n                category: this.props.selectMyPost.category,\n                airspace: this.props.selectMyPost.airspace,\n                description: this.props.selectMyPost.description,\n                authors_rating: this.props.selectMyPost.authors_rating,\n                video: this.props.selectMyPost.video\n        \n            }\n        handleInputChange = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n\n        handleStarInput=(e)=>{\n            let rating;\n            if (e.target.value === \"⭐\") {\n                rating = 1\n            } else if (e.target.value === \"⭐⭐\") {\n                rating = 2\n            } else if (e.target.value === \"⭐⭐⭐\") {\n                rating = 3\n            } else if (e.target.value === \"⭐⭐⭐⭐\"){\n                rating = 4\n            } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n                rating = 5\n            }\n            this.setState({authors_rating: rating})\n           \n        }\n\n        handleSubmit = (e) => {\n         \n            e.preventDefault()\n        \n            const id = e.target.id\n            console.log(e.target)\n            \n            fetch(`http://localhost:3000/posts/${this.props.selectMyPost.id}`, {\n                method: \"PATCH\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    image_url: this.state.image_url,\n                    title: this.state.title,\n                    user_id: this.state.user_id,\n                    address: this.state.address,\n                    latitude: this.state.latitude,\n                    longitude: this.state.longitude,\n                    category: this.state.category,\n                    airspace: this.state.airspace,\n                    description: this.state.description,\n                    authors_rating: this.state.authors_rating,\n                    video: this.state.video\n                })\n            })\n            .then(response => response.json())\n            .then(updatedPost => {\n                console.log(updatedPost)\n             \n                this.props.updateMyPost(updatedPost)\n                this.props.history.push('/your-posts')\n            })\n        }\n        render(){\n\n            \n            return(\n                <Container >\n                <br></br>\n                <br></br>\n            <Row>\n                <Col>      \n                    <div>\n                     <MapContainer/>\n                     </div>\n                </Col>\n                <br></br>\n                <Col>\n                <div className=\"new-post-form\">\n        <form onSubmit={this.handleSubmit}>\n         <h5>Your New Fly Spot</h5>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n          \n            <button type=\"submit\" class=\"btn btn-secondary\">Update</button>\n            </form>\n        </div>   \n                </Col>\n            </Row>\n        </Container>\n    \n            )\n        }\n    }\n    const mapStateToProps = (state) => {\n        return {\n            post: state.post,\n            currentUser: state.currentUser,\n            selectMyPost: state.selectMyPost\n        }\n    }\n    const mapDispatchToProps = {\n        updateMyPost: updateMyPost\n    } \n    export default connect(mapStateToProps, mapDispatchToProps)(EditPostForm)\n\n",["152","153"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js",["154"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js",["155"],"import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // for google map places autocomplete\n      address: '',\n\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n  \n      mapCenter: {\n        lat: 41.8781,\n        lng: -87.6298\n      }\n    };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    this.setState({ address });\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log('Success', latLng);\n\n        // update center state\n        this.setState({ mapCenter: latLng });\n      })\n      .catch(error => console.error('Error', error));\n  };\n  \n  render() {\n\n    const style = {\n      width: '80%',\n      height: '60%'\n    }\n\n    return (\n      <div id='googleMaps'>\n        <PlacesAutocomplete\n          value={this.state.address}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n          >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n              <h5>Check to see if  address is valid</h5>\n          {/* <div> \n            <h2>Latitude: {this.state.mapCenter.lat}</h2>\n            <h2>Longitude: {this.state.mapCenter.lng}</h2>\n          </div> */}\n              <input\n                {...getInputProps({\n                  placeholder: 'Search Places ...',\n                  className: 'location-search-input',\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                  return (\n                    <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n\n        <Map\n          \n          google={this.props.google}\n          initialCenter={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n          center={{\n            lat: this.state.mapCenter.lat,\n            lng: this.state.mapCenter.lng\n          }}\n          >\n          <Marker \n            position={{\n              lat: this.state.mapCenter.lat,\n              lng: this.state.mapCenter.lng\n            }} />\n        </Map>\n      </div>\n    )\n  }\n}\n  \n  export default GoogleApiWrapper({\n    apiKey: ('AIzaSyCdOsVIMuoabg1UXMupeirnXqpjhuvICXA')\n  })(MapContainer)","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPostReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js",["156","157"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\n\nclass NewPostForm extends React.Component{\n\n    state = {\n        image_url: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: '',\n        longitude: '',\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: ''\n       \n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n\n    handleStarInput=(e)=>{\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\"){\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({authors_rating: rating})\n       \n    }\n\n    handleSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n           console.log(newPostObj)\n            this.props.createPost(newPostObj)\n            this.props.history.push(\"/your-posts\")\n            \n        })\n    }\n\n   \n    render(){\n        return(\n            \n\n\n         <Container >\n            <br></br>\n            <br></br>\n        <Row>\n            <Col>      \n                <div>\n                 <MapContainer/>\n                 </div>\n            </Col>\n            <br></br>\n            <Col>\n            <div className=\"new-post-form\">\n        <form onSubmit={this.handleSubmit}>\n         <h5>Your New Fly Spot</h5>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n          \n            <button type=\"submit\" class=\"btn btn-secondary\">Post It</button>\n            </form>\n        </div>   \n            </Col>\n        </Row>\n    </Container>\n\n\n\n         )\n    }\n }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n        \n    }\n}\n\nconst mapDispatchToProps = { \n    createPost: createPost\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js",["158","159","160","161","162","163","164","165","166"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js",["167","168","169","170"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js",[],["171","172"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/logOutUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/selectReview.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"173","replacedBy":"177"},{"ruleId":"175","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":4,"column":9,"nodeType":"181","messageId":"182","endLine":4,"endColumn":13},{"ruleId":"173","replacedBy":"183"},{"ruleId":"175","replacedBy":"184"},{"ruleId":"179","severity":1,"message":"185","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":21},{"ruleId":"179","severity":1,"message":"186","line":48,"column":42,"nodeType":"181","messageId":"182","endLine":48,"endColumn":53},{"ruleId":"173","replacedBy":"187"},{"ruleId":"175","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":16,"column":32,"nodeType":"191","messageId":"192","endLine":16,"endColumn":34},{"ruleId":"173","replacedBy":"193"},{"ruleId":"175","replacedBy":"194"},{"ruleId":"179","severity":1,"message":"195","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":11},{"ruleId":"179","severity":1,"message":"196","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"179","severity":1,"message":"197","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"198","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":40,"column":11,"nodeType":"201","endLine":40,"endColumn":45},{"ruleId":"202","severity":1,"message":"203","line":41,"column":57,"nodeType":"204","endLine":41,"endColumn":86},{"ruleId":"202","severity":1,"message":"203","line":44,"column":56,"nodeType":"204","endLine":44,"endColumn":81},{"ruleId":"179","severity":1,"message":"205","line":5,"column":9,"nodeType":"181","messageId":"182","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"206","line":5,"column":38,"nodeType":"181","messageId":"182","endLine":5,"endColumn":42},{"ruleId":"179","severity":1,"message":"207","line":50,"column":19,"nodeType":"181","messageId":"182","endLine":50,"endColumn":21},{"ruleId":"173","replacedBy":"208"},{"ruleId":"175","replacedBy":"209"},{"ruleId":"179","severity":1,"message":"210","line":3,"column":9,"nodeType":"181","messageId":"182","endLine":3,"endColumn":22},{"ruleId":"179","severity":1,"message":"211","line":45,"column":11,"nodeType":"181","messageId":"182","endLine":45,"endColumn":16},{"ruleId":"179","severity":1,"message":"205","line":5,"column":9,"nodeType":"181","messageId":"182","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"206","line":5,"column":38,"nodeType":"181","messageId":"182","endLine":5,"endColumn":42},{"ruleId":"179","severity":1,"message":"198","line":2,"column":17,"nodeType":"181","messageId":"182","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"195","line":2,"column":28,"nodeType":"181","messageId":"182","endLine":2,"endColumn":31},{"ruleId":"179","severity":1,"message":"196","line":2,"column":33,"nodeType":"181","messageId":"182","endLine":2,"endColumn":36},{"ruleId":"179","severity":1,"message":"212","line":33,"column":27,"nodeType":"181","messageId":"182","endLine":33,"endColumn":41},{"ruleId":"179","severity":1,"message":"213","line":33,"column":54,"nodeType":"181","messageId":"182","endLine":33,"endColumn":61},{"ruleId":"179","severity":1,"message":"214","line":33,"column":63,"nodeType":"181","messageId":"182","endLine":33,"endColumn":71},{"ruleId":"179","severity":1,"message":"215","line":33,"column":73,"nodeType":"181","messageId":"182","endLine":33,"endColumn":82},{"ruleId":"179","severity":1,"message":"216","line":33,"column":84,"nodeType":"181","messageId":"182","endLine":33,"endColumn":92},{"ruleId":"179","severity":1,"message":"217","line":33,"column":107,"nodeType":"181","messageId":"182","endLine":33,"endColumn":115},{"ruleId":"179","severity":1,"message":"218","line":4,"column":23,"nodeType":"181","messageId":"182","endLine":4,"endColumn":46},{"ruleId":"179","severity":1,"message":"212","line":39,"column":101,"nodeType":"181","messageId":"182","endLine":39,"endColumn":115},{"ruleId":"179","severity":1,"message":"219","line":39,"column":117,"nodeType":"181","messageId":"182","endLine":39,"endColumn":122},{"ruleId":"199","severity":1,"message":"200","line":54,"column":21,"nodeType":"201","endLine":54,"endColumn":71},{"ruleId":"173","replacedBy":"220"},{"ruleId":"175","replacedBy":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar",["222"],["223"],"'currentUser' is defined but never used.","'user_rating' is assigned a value but never used.",["222"],["223"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["222"],["223"],"'Col' is defined but never used.","'Row' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'Card' is defined but never used.","'id' is assigned a value but never used.",["222"],["223"],"'BrowserRouter' is defined but never used.","'style' is assigned a value but never used.","'authors_rating' is assigned a value but never used.","'address' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'category' is assigned a value but never used.","'airspace' is assigned a value but never used.","'selectPublicPostReviews' is defined but never used.","'video' is assigned a value but never used.",["222"],["223"],"no-global-assign","no-unsafe-negation"]