[{"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/Feed.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPostReviews.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NavBar.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js":"21"},{"size":379,"mtime":1612895897975,"results":"22","hashOfConfig":"23"},{"size":3219,"mtime":1616011874695,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1612295974335,"results":"25","hashOfConfig":"23"},{"size":1163,"mtime":1615406460211,"results":"26","hashOfConfig":"23"},{"size":794,"mtime":1613511652446,"results":"27","hashOfConfig":"23"},{"size":677,"mtime":1613670124788,"results":"28","hashOfConfig":"23"},{"size":3184,"mtime":1615495137047,"results":"29","hashOfConfig":"23"},{"size":845,"mtime":1613493107229,"results":"30","hashOfConfig":"23"},{"size":714,"mtime":1615494873570,"results":"31","hashOfConfig":"23"},{"size":1729,"mtime":1616004954938,"results":"32","hashOfConfig":"23"},{"size":219,"mtime":1612920290001,"results":"33","hashOfConfig":"23"},{"size":2275,"mtime":1613680137908,"results":"34","hashOfConfig":"23"},{"size":2444,"mtime":1616009002690,"results":"35","hashOfConfig":"23"},{"size":231,"mtime":1612922217875,"results":"36","hashOfConfig":"23"},{"size":216,"mtime":1612720215687,"results":"37","hashOfConfig":"23"},{"size":217,"mtime":1613493107230,"results":"38","hashOfConfig":"23"},{"size":895,"mtime":1613527861050,"results":"39","hashOfConfig":"23"},{"size":8259,"mtime":1615489205050,"results":"40","hashOfConfig":"23"},{"size":2880,"mtime":1615321901945,"results":"41","hashOfConfig":"23"},{"size":6620,"mtime":1616005616107,"results":"42","hashOfConfig":"23"},{"size":2086,"mtime":1616010769514,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1tdv2vp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js",[],["94","95"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js",["96"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js",[],["97","98"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/Feed.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js",["99"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js",[],["100","101"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPostReviews.js",["102"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js",[],["103","104"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NavBar.js",["105","106","107"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js",[],["108","109"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js",["110"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {signinUser} from '../actions/signinUser'\nimport {Form} from 'react-bootstrap'\n\n\nclass SignIn extends React.Component{\n\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \" \"\n        \n    }\n\nredirectToSignUp = () => {\n    this.props.history.push('/signup')\n} \n\nhandleInputChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n\n    const reqObj = { \n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(this.state)\n    }\n    fetch('http://localhost:3000/api/v1/auth', reqObj)\n    .then(resp => resp.json())\n    .then(userObj => {                         ////then back end sends  back user obj after verifying in backend\n        if (userObj.error){\n            this.setState({\n                error: userObj.error\n        })\n    } else { \n        localStorage.setItem(\"jwt_token\", userObj.token)\n       this.props.signinUser(userObj.user)\n       this.props.history.push(\"/feed\")\n    }\n    })\n}\n\n\n\n    render(){\n        return(\n\n           \n\n\n            \n        <div className=\"background\">\n            <div className=\"whitefont\">\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n\n                <h1> Welcome to FlySpot</h1>\n                <br></br>\n                <h2> Please Log In</h2>\n            </div>\n           \n            <br></br>\n            <br></br>\n            {this.state.error ? <h5 style={{color: \"red\"}}>{this.state.error}</h5> : null}\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <input  name={'username'}  onChange={this.handleInputChange} value={this.state.username} placeholder=\"Enter your username\"/> <br></br> <br></br>\n                    <input  type=\"password\" name={'password'}  onChange={this.handleInputChange} value={this.state.password} placeholder=\"Enter your password\"/> <br></br> <br></br>\n                </div>\n                 <button type=\"submit\" class=\"btn btn-secondary\">Log In</button>\n                 <button type=\"submit\" onClick={this.redirectToSignUp} class=\"btn btn-secondary\">Sign up</button>\n            </form>\n        </div>\n        )\n    }\n\n}\n\n\nconst mapDispatchToProps = {\n    signinUser: signinUser\n}\n export default connect(null, mapDispatchToProps)(SignIn)","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditPostForm.js",["111","112","113"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/FeedCard.js",["114","115","116"],"import React from 'react'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport {withRouter} from 'react-router-dom'\nimport { selectPublicPost } from '../actions/selectPublicPost'\nimport {connect} from 'react-redux'\nimport {selectPublicPostReviews} from '../actions/selectPublicPostReview'\n\nclass FeedCard extends React.Component{\n\n\n    handleShowPost = (e) => {\n        const id = e.target.id\n        this.props.selectPublicPost(this.props.post)\n        this.props.selectPublicPostReviews(this.props.post.reviews)\n        this.props.history.push(`/showpost/${id}`)\n    }\n\n    renderStars = () => {\n        if (this.props.post.authors_rating === 1) {\n            return \"⭐\" \n        } else if (this.props.post.authors_rating === 2) {\n        return \"⭐⭐\" \n        } else if (this.props.post.authors_rating === 3) {\n            return \"⭐⭐⭐\"\n        } else if (this.props.post.authors_rating === 4) {\n         return \"⭐⭐⭐⭐\" \n        } else if (this.props.post.authors_rating === 5) {\n            return \"⭐⭐⭐⭐⭐\" }\n    }\n\n    render(){\n        \n        const {image_url, title, id, description} = this.props.post\n        return(\n                <div className=\"feed-card\">\n                    <br></br>\n                    <Card  style={{ width: '30rem'}}>\n                    <Card.Header><h3>{title}</h3></Card.Header>\n                    <Card.Img variant=\"top\" src={image_url} />\n                    <Card.Body>\n                        <Card.Text className=\"card-text\">\n                        <h6 className=\"rating\">Author's Rating: {this.renderStars()}</h6>\n                        {description}\n                        </Card.Text>\n                        <Button onClick={this.handleShowPost} id={id} variant=\"secondary\">View</Button>\n                    </Card.Body>\n                    </Card>\n                </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    selectPublicPost: selectPublicPost,\n    selectPublicPostReviews: selectPublicPostReviews\n}\n\n\nexport default connect(null, mapDispatchToProps)(withRouter(FeedCard))",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":40,"column":11,"nodeType":"123","messageId":"124","endLine":40,"endColumn":16},{"ruleId":"117","replacedBy":"125"},{"ruleId":"119","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":16,"column":32,"nodeType":"129","messageId":"130","endLine":16,"endColumn":34},{"ruleId":"117","replacedBy":"131"},{"ruleId":"119","replacedBy":"132"},{"ruleId":"127","severity":1,"message":"128","line":14,"column":38,"nodeType":"129","messageId":"130","endLine":14,"endColumn":40},{"ruleId":"117","replacedBy":"133"},{"ruleId":"119","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":36,"column":11,"nodeType":"137","endLine":36,"endColumn":45},{"ruleId":"138","severity":1,"message":"139","line":37,"column":57,"nodeType":"140","endLine":37,"endColumn":86},{"ruleId":"138","severity":1,"message":"139","line":40,"column":56,"nodeType":"140","endLine":40,"endColumn":81},{"ruleId":"117","replacedBy":"141"},{"ruleId":"119","replacedBy":"142"},{"ruleId":"121","severity":1,"message":"143","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"144","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},{"ruleId":"121","severity":1,"message":"145","line":5,"column":39,"nodeType":"123","messageId":"124","endLine":5,"endColumn":43},{"ruleId":"121","severity":1,"message":"146","line":42,"column":15,"nodeType":"123","messageId":"124","endLine":42,"endColumn":17},{"ruleId":"121","severity":1,"message":"147","line":2,"column":17,"nodeType":"123","messageId":"124","endLine":2,"endColumn":26},{"ruleId":"121","severity":1,"message":"148","line":2,"column":28,"nodeType":"123","messageId":"124","endLine":2,"endColumn":31},{"ruleId":"121","severity":1,"message":"149","line":2,"column":33,"nodeType":"123","messageId":"124","endLine":2,"endColumn":36},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'style' is assigned a value but never used.","Identifier","unusedVar",["150"],["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["150"],["151"],["150"],["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["150"],["151"],"'Form' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'id' is assigned a value but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]