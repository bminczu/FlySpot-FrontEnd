[{"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/signinUser.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reportWebVitals.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/showPublicPost.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/MapContainer.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js":"20"},{"size":776,"mtime":1616087605466,"results":"21","hashOfConfig":"22"},{"size":2499,"mtime":1638985665298,"results":"23","hashOfConfig":"22"},{"size":892,"mtime":1638813143279,"results":"24","hashOfConfig":"22"},{"size":219,"mtime":1612920290001,"results":"25","hashOfConfig":"22"},{"size":6561,"mtime":1638477543000,"results":"26","hashOfConfig":"22"},{"size":218,"mtime":1612895274926,"results":"27","hashOfConfig":"22"},{"size":657,"mtime":1638988113273,"results":"28","hashOfConfig":"22"},{"size":1233,"mtime":1638976606629,"results":"29","hashOfConfig":"22"},{"size":362,"mtime":1612295974335,"results":"30","hashOfConfig":"22"},{"size":845,"mtime":1613493107229,"results":"31","hashOfConfig":"22"},{"size":2538,"mtime":1638987323110,"results":"32","hashOfConfig":"22"},{"size":8175,"mtime":1616083536367,"results":"33","hashOfConfig":"22"},{"size":216,"mtime":1612720215687,"results":"34","hashOfConfig":"22"},{"size":217,"mtime":1613493107230,"results":"35","hashOfConfig":"22"},{"size":2933,"mtime":1616083474280,"results":"36","hashOfConfig":"22"},{"size":379,"mtime":1618948485894,"results":"37","hashOfConfig":"22"},{"size":714,"mtime":1615494873570,"results":"38","hashOfConfig":"22"},{"size":2376,"mtime":1638987594999,"results":"39","hashOfConfig":"22"},{"size":2996,"mtime":1634073742662,"results":"40","hashOfConfig":"22"},{"size":231,"mtime":1612922217875,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1q4n5vx",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/posts.js",["90"],"const posts = (state=[], action) => {\n\n    let updatedPosts;\n\n    switch(action.type){\n        case \"SIGN_IN_USER\":\n        case \"SIGN_UP_USER\":\n        case \"CURRENT_USER\":\n            return action.user.posts\n        case \"CREATE_POST\":\n        return [...state, action.post]\n        case \"DELETE_POST\":\n            updatedPosts = state.filter(post => post.id !== action.id)\n                    return updatedPosts\n        case \"UPDATE_MY_POST\":\n            updatedPosts = state.map(postObj => {\n                if (postObj.id == action.post.id) {\n                    return action.post\n                } else {\n                    return postObj\n                }\n            })\n            return updatedPosts\n    default:\n        return state\n }\n}\n\nexport default posts\n\n",["91","92"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NavBar.js",["93","94"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport { logOutUser } from '../actions/logOutUser';\nimport Logo from '../images/Logo.jpeg'\nimport { Container, Nav, Navbar } from 'react-bootstrap';\n\n\nclass NavBar extends React.Component{ \n\n    handleLogOut = () => {\n      this.props.logOutUser()\n      this.props.history.push(\"/signin\")\n      \n    }\n    handleCreatePost = () => {\n      this.props.history.push('/home/newpost')\n    }\n    \n    handleShowYourPosts = () => {\n      this.props.history.push('/yourposts')\n    }\n\n    handleDirectToFeed = () => {\n      this.props.history.push('/feed')\n    }\n    render(){\n    \n    \n      return (\n       \n\n         \n        \n        <>\n          {this.props.currentUser ? \n            <Nav className=\"nav-style\" fill >\n              \n                <Navbar.Brand><img className=\"logo\" src={Logo}/> </Navbar.Brand>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleCreatePost}>  Create Post </h1> </Nav.Item>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleShowYourPosts}>Your Posts</h1></Nav.Item>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleDirectToFeed}> Feed </h1></Nav.Item>\n              <Nav.Item> <h1 className=\"nav-button\" onClick={this.handleLogOut}>Sign Out </h1> </Nav.Item>\n            </Nav>\n          :\n          null\n          }\n          </>\n    \n\n        // <>\n\n        //   {this.props.currentUser ? \n        //     >\n        //       <img className=\"logo\" src={Logo}/> \n        //       className=\"nav-button\"  type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCreatePost} >Create Post</button>\n        //        type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDirectToFeed} >Feed</button>\n        //        type=\"button\" className=\"btn btn-secondary\" onClick={this.handleShowYourPosts} >View Your Posts</button>\n        //       className=\"nav-button\" type=\"button\" className=\"btn btn-light\" onClick={this.handleLogOut}>Sign Out </button>\n        //     </div>\n        //     :\n        //     null\n        //   } \n        //   </>\n          \n          \n        \n     \n  \n       );\n      };\n    }\n    \n    const mapDispatchToProps = {\n      logOutUser: logOutUser\n    }\n    \n    const mapStateToProps = (state) => {\n      return{\n      currentUser: state.currentUser\n      }\n    }\n    \n    export default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))",["95","96"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/publicPosts.js",[],["97","98"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/NewPostForm.js",["99","100","101"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Container, Col, Row} from 'react-bootstrap'\nclass NewPostForm extends React.Component{\n    state = {\n        image_url: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: ''\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleStarInput=(e)=>{\n        let rating;\n        if (e.target.value === \"⭐\") {\n            rating = 1\n        } else if (e.target.value === \"⭐⭐\") {\n            rating = 2\n        } else if (e.target.value === \"⭐⭐⭐\") {\n            rating = 3\n        } else if (e.target.value === \"⭐⭐⭐⭐\"){\n            rating = 4\n        } else if (e.target.value === \"⭐⭐⭐⭐⭐\") {\n            rating = 5\n        }\n        this.setState({authors_rating: rating})\n    }\n    handleSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image_url: this.state.image_url,\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n           console.log(newPostObj.id)\n            this.props.createPost(newPostObj)\n            this.props.history.push(\"/yourposts\")\n        })\n    }\nrenderCoords = (latLng) => {\n    this.setState({\n        latitude: latLng.lat,\n        longitude: latLng.lng\n    })\n}\nrenderAddress = (address) => {\n    this.setState({\n        address: address\n    })\n}\n    render(){\n        return(\n         <div>\n            <br></br>\n            <br></br>\n       \n                 \n                <div>\n                 <MapContainer renderCoords={this.renderCoords} renderAddress={this.renderAddress}/>\n                 </div>\n           \n            <br></br>\n            \n            <div className=\"new-post-form\">\n        <form onSubmit={this.handleSubmit}>\n         <h5>Your New Fly Spot</h5>\n            <input type=\"text\" class=\"form-control\" onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title\"/><br></br> <br></br>\n                <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/> \n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/>\n                <br></br>\n                <select onChange={this.handleStarInput} value={this.state.authors_rating} name= {\"user_rating\"} placeholder=\"Rating 1 to 5\" class=\"form-control\">\n                        <option selected>Rate This Spot</option>\n                        <option>⭐</option>\n                        <option>⭐⭐</option>\n                        <option>⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐</option>\n                        <option>⭐⭐⭐⭐⭐</option>\n                    </select>\n                    <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.image_url} name= {\"image_url\"} placeholder=\"Photo URL\"/>\n                <br></br>\n                        </div><div class=\"form-group col-md-6\">\n                         <select onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"class=\"form-control\">\n                        <option selected>Area Category</option>\n                        <option>Urban</option>\n                        <option>Nature</option>\n                        <option>Industrial</option>\n                        <option>Park</option>\n                        <option>Other</option>\n                     </select>\n                <br></br>\n                    <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/>\n                <br></br>\n                <select onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\" class=\"form-control\">\n                    <option selected>Select Airspace Classification</option>\n                    <option>Class A</option>\n                    <option>Class B</option>\n                    <option>Class C</option>\n                    <option>Class D</option>\n                    <option>Class G</option>\n                </select>\n                <br></br>\n                <input  class=\"form-control\" onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Youtube Video Link\"/>\n                <br></br>\n                <div class=\"form-group col-md-4\">\n                </div>\n                </div>\n                <br></br>\n                <textarea class=\"form-control\" onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\" rows=\"3\"></textarea> \n                <br></br>\n            </div>\n            <button type=\"submit\" class=\"btn btn-secondary\">Post It</button>\n            </form>\n        </div>   \n        </div>\n       \n         )\n    }\n }\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser,\n        getMapCoordinates: state.getMapCoordinates,\n        getMapAddress: state.getMapAddress\n    }\n}\nconst mapDispatchToProps = { \n    createPost: createPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)",["102","103"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/PostContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/Feed.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reportWebVitals.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPostReviews.js",["104"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews","/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignIn.js",["105"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/EditPostForm.js",["106"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/showPublicPost.js",["107","108","109","110"],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/currentUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/components/MapContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/FlySpot-Frontend/src/reducers/selectPublicPost.js",[],{"ruleId":"111","severity":1,"message":"112","line":17,"column":32,"nodeType":"113","messageId":"114","endLine":17,"endColumn":34},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":39,"column":31,"nodeType":"125","endLine":39,"endColumn":65},{"ruleId":"115","replacedBy":"126"},{"ruleId":"117","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"117","replacedBy":"129"},{"ruleId":"119","severity":1,"message":"120","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":5,"column":20,"nodeType":"121","messageId":"122","endLine":5,"endColumn":23},{"ruleId":"119","severity":1,"message":"131","line":5,"column":25,"nodeType":"121","messageId":"122","endLine":5,"endColumn":28},{"ruleId":"115","replacedBy":"132"},{"ruleId":"117","replacedBy":"133"},{"ruleId":"111","severity":1,"message":"112","line":14,"column":38,"nodeType":"113","messageId":"114","endLine":14,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":78,"column":136,"nodeType":"136","endLine":78,"endColumn":163},{"ruleId":"119","severity":1,"message":"137","line":44,"column":15,"nodeType":"121","messageId":"122","endLine":44,"endColumn":17},{"ruleId":"119","severity":1,"message":"138","line":4,"column":23,"nodeType":"121","messageId":"122","endLine":4,"endColumn":46},{"ruleId":"119","severity":1,"message":"139","line":33,"column":101,"nodeType":"121","messageId":"122","endLine":33,"endColumn":115},{"ruleId":"119","severity":1,"message":"140","line":33,"column":117,"nodeType":"121","messageId":"122","endLine":33,"endColumn":122},{"ruleId":"123","severity":1,"message":"124","line":49,"column":21,"nodeType":"125","endLine":49,"endColumn":71},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["141"],["142"],["141"],["142"],"'Col' is defined but never used.","'Row' is defined but never used.",["141"],["142"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'id' is assigned a value but never used.","'selectPublicPostReviews' is defined but never used.","'authors_rating' is assigned a value but never used.","'video' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]