[{"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js":"1","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js":"2","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js":"3","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js":"4","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js":"5","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js":"6","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js":"7","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js":"8","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js":"9","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js":"10","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js":"11","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js":"12","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js":"13","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js":"14","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPostReviews.js":"15","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/Feed.js":"16","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js":"17","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js":"18","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js":"19","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js":"20","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js":"21","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js":"22","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/createPost.js":"23"},{"size":795,"mtime":1613509634908,"results":"24","hashOfConfig":"25"},{"size":2310,"mtime":1613493107196,"results":"26","hashOfConfig":"25"},{"size":2309,"mtime":1613493107210,"results":"27","hashOfConfig":"25"},{"size":1908,"mtime":1613493107201,"results":"28","hashOfConfig":"25"},{"size":2069,"mtime":1613090839848,"results":"29","hashOfConfig":"25"},{"size":1981,"mtime":1613509531860,"results":"30","hashOfConfig":"25"},{"size":216,"mtime":1612720215687,"results":"31","hashOfConfig":"25"},{"size":713,"mtime":1613493107228,"results":"32","hashOfConfig":"25"},{"size":604,"mtime":1613493107209,"results":"33","hashOfConfig":"25"},{"size":2044,"mtime":1613493107212,"results":"34","hashOfConfig":"25"},{"size":2348,"mtime":1613508790013,"results":"35","hashOfConfig":"25"},{"size":3341,"mtime":1613509440385,"results":"36","hashOfConfig":"25"},{"size":5369,"mtime":1613509169331,"results":"37","hashOfConfig":"25"},{"size":896,"mtime":1613493107227,"results":"38","hashOfConfig":"25"},{"size":845,"mtime":1613493107229,"results":"39","hashOfConfig":"25"},{"size":1131,"mtime":1613493107202,"results":"40","hashOfConfig":"25"},{"size":218,"mtime":1612895274926,"results":"41","hashOfConfig":"25"},{"size":379,"mtime":1612895897975,"results":"42","hashOfConfig":"25"},{"size":362,"mtime":1612295974335,"results":"43","hashOfConfig":"25"},{"size":219,"mtime":1612920290001,"results":"44","hashOfConfig":"25"},{"size":231,"mtime":1612922217875,"results":"45","hashOfConfig":"25"},{"size":217,"mtime":1613493107230,"results":"46","hashOfConfig":"25"},{"size":320,"mtime":1613509405071,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tdv2vp",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/posts.js",["99"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/App.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignIn.js",["100"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/EditReviewForm.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/ReviewPublicPost.js",[],["101","102"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostCard.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectMyPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/PostContainer.js",[],["103","104"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/SignUp.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/showPublicPost.js",["105","106"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/MapContainer.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/NewPostForm.js",["107","108","109","110"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { createPost } from '../actions/createPost'\nimport MapContainer from './MapContainer'\nimport {Button, Container, Col, Row, Card} from 'react-bootstrap'\nimport { DirectUpload, MyUploader } from 'activestorage';\n\nclass NewPostForm extends React.Component{\nconstructor(){\n    super()\n    this.state = {\n        returnedImageUrl: \"\",\n        title: \"\",\n        user_id: '',\n        address: \"\",\n        latitude: '',\n        longitude: '',\n        category: \"\",\n        airspace: \"\",\n        description: \"\",\n        authors_rating: '',\n        video: '',\n        photo: null\n    }\n    }\n\n    handleInputChange = (e) => {\n        \n        if (e.target.name === 'photo') {\n            console.log(e.target.files[0])\n            this.setState({\n                [e.target.name]: e.target.files[0]\n            })\n        } else {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    handleNumberInputChange = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n\n\n\n    uploadFile = (file, post) => {\n        // const my_uploader = new MyUploader(file, 'http://localhost:3000/rails/active_storage/direct_uploads')\n        const upload = new DirectUpload(file, 'http://localhost:3000/rails/active_storage/direct_uploads')\n       \n        upload.create((error, blob)=> {\n            if (error){\n                console.log(error)\n            }else{\n                fetch(`http://localhost:3000/posts/image/${post.id}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                image: blob.signed_id\n            })\n            })\n            .then(response => response.json())\n            .then(response => this.setState({returnedImageUrl: response.image}))\n            // .then(this.props.history.push(\"/your-posts\"))\n            \n        }\n        })\n    }\n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                title: this.state.title,\n                user_id: this.props.currentUser.id,\n                address: this.state.address,\n                latitude: this.state.latitude,\n                longitude: this.state.longitude,\n                category: this.state.category,\n                airspace: this.state.airspace,\n                description: this.state.description,\n                authors_rating: this.state.authors_rating,\n                video: this.state.video\n            })\n        })\n        .then (response => response.json())\n        .then(newPostObj => {\n          console.log(this.state.photo)\n            this.props.createPost(newPostObj)\n            this.uploadFile(this.state.photo, newPostObj)\n            \n            \n            \n        })\n    }\n    render(){\n        return(\n            \n\n\n            <Container >\n            <br></br>\n            <br></br>\n        <Row>\n            <Col>      \n                <div>\n                 <MapContainer/>\n                 </div>\n            </Col>\n            <Col>\n            <h1>New Post Details</h1>\n            <img src={this.state.returnedImageUrl}/>\n        <form onSubmit={this.handleSubmit}>\n            \n            <input   onChange={this.handleInputChange} value={this.state.title}  name= {\"title\"} placeholder=\"Title Your Post\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.address} name= {\"address\"} placeholder=\"Address\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.latitude} name= {\"latitude\"} placeholder=\"Latitude\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.longitude} name= {\"longitude\"} placeholder=\"Longitude\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.category} name= {\"category\"} placeholder=\"Category\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.airspace} name= {\"airspace\"} placeholder=\"Airspace\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.description} name= {\"description\"} placeholder=\"Description\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.authors_rating} name= {\"authors_rating\"} placeholder=\"Author's Rating\"/><br></br> <br></br>\n            <input  onChange={this.handleInputChange} value={this.state.video} name= {\"video\"} placeholder=\"Video Link\"/><br></br> <br></br>\n            <input type=\"file\" directUpload={true} name={\"photo\"} onChange={this.handleInputChange} />\n            <br></br>\n            <br></br>\n            <input type='submit' className=\"btn btn-secondary\" value=\"Create New Post\" />\n        </form>\n            \n            </Col>\n        </Row>\n    </Container>\n\n\n\n         )\n    }\n }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = { \n    createPost: createPost\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)\n\n","/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/index.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPostReviews.js",["111"],"const selectPublicPostReviews = (state=[], action) => {\n    let updatedReviews;\n    switch(action.type) {\n        case \"SELECT_PUBLIC_POST_REVIEWS\":\n            return action.publicPostReviews\n\n        case \"ADD_REVIEW\":\n                return [...state, action.review]\n        case \"DELETE_REVIEW\":\n                    updatedReviews = state.filter(review => review.id !== action.id)\n                    return updatedReviews\n        case \"UPDATE_REVIEW\":\n                return updatedReviews = state.map(reviewObj => {\n                    if (reviewObj.id == action.review.id){\n                        return action.review\n                    } else {\n                         return reviewObj\n                     }\n                })\n                 default:\n                     return state\n   }\n}\n\nexport default selectPublicPostReviews",["112","113"],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/components/Feed.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/signinUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/currentUser.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reportWebVitals.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/publicPosts.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectPublicPost.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/reducers/selectReview.js",[],"/Users/bartminczuk/Flatiron/Mod5-Project/front-end-drone/src/actions/createPost.js",[],{"ruleId":"114","severity":1,"message":"115","line":17,"column":32,"nodeType":"116","messageId":"117","endLine":17,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":4,"column":9,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"118","severity":1,"message":"128","line":4,"column":23,"nodeType":"120","messageId":"121","endLine":4,"endColumn":46},{"ruleId":"118","severity":1,"message":"129","line":31,"column":106,"nodeType":"120","messageId":"121","endLine":31,"endColumn":111},{"ruleId":"118","severity":1,"message":"130","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"118","severity":1,"message":"131","line":5,"column":38,"nodeType":"120","messageId":"121","endLine":5,"endColumn":42},{"ruleId":"118","severity":1,"message":"132","line":6,"column":24,"nodeType":"120","messageId":"121","endLine":6,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":120,"column":13,"nodeType":"135","endLine":120,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":14,"column":38,"nodeType":"116","messageId":"117","endLine":14,"endColumn":40},{"ruleId":"122","replacedBy":"136"},{"ruleId":"124","replacedBy":"137"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],"'selectPublicPostReviews' is defined but never used.","'video' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'MyUploader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["138"],["139"],"no-global-assign","no-unsafe-negation"]